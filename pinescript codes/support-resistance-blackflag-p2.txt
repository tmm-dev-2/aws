// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © TradingMarketMist

//@version=5
strategy('S/R & Blackflag P2', overlay=true, initial_capital =100000, default_qty_value = 10000, default_qty_type = strategy.percent_of_equity)

trailType = input.string('modified', 'Trailtype', options=['modified', 'unmodified'])
ATRPeriod = input(28, 'ATR Period')
ATRFactor = input(5, 'ATR Factor')
show_fib_entries = input(false, 'Show Fib Entries?')

norm_o = request.security(ticker.new(syminfo.prefix, syminfo.ticker), timeframe.period, open)
norm_h = request.security(ticker.new(syminfo.prefix, syminfo.ticker), timeframe.period, high)
norm_l = request.security(ticker.new(syminfo.prefix, syminfo.ticker), timeframe.period, low)
norm_c = request.security(ticker.new(syminfo.prefix, syminfo.ticker), timeframe.period, close)
//

// Wilders ma //
Wild_ma(_src, _malength) =>
    _wild = 0.0
    _wild := nz(_wild[1]) + (_src - nz(_wild[1])) / _malength
    _wild

/////////// TRUE RANGE CALCULATIONS /////////////////
HiLo = math.min(norm_h - norm_l, 1.5 * nz(ta.sma(norm_h - norm_l, ATRPeriod)))

HRef = norm_l <= norm_h[1] ? norm_h - norm_c[1] : norm_h - norm_c[1] - 0.5 * (norm_l - norm_h[1])

LRef = norm_h >= norm_l[1] ? norm_c[1] - norm_l : norm_c[1] - norm_l - 0.5 * (norm_l[1] - norm_h)

trueRange = trailType == 'modified' ? math.max(HiLo, HRef, LRef) : math.max(norm_h - norm_l, math.abs(norm_h - norm_c[1]), math.abs(norm_l - norm_c[1]))
//}


/////////// TRADE LOGIC ////////////////////////
//{
loss = ATRFactor * Wild_ma(trueRange, ATRPeriod)

Up = norm_c - loss
Dn = norm_c + loss

TrendUp = Up
TrendDown = Dn
Trend = 1

TrendUp := norm_c[1] > TrendUp[1] ? math.max(Up, TrendUp[1]) : Up
TrendDown := norm_c[1] < TrendDown[1] ? math.min(Dn, TrendDown[1]) : Dn

Trend := norm_c > TrendDown[1] ? 1 : norm_c < TrendUp[1] ? -1 : nz(Trend[1], 1)
trail = Trend == 1 ? TrendUp : TrendDown

ex = 0.0
ex := ta.crossover(Trend, 0) ? norm_h : ta.crossunder(Trend, 0) ? norm_l : Trend == 1 ? math.max(ex[1], norm_h) : Trend == -1 ? math.min(ex[1], norm_l) : ex[1]
//}

// //////// PLOT TP and SL /////////////
//{
plot(trail, 'Trailingstop', style=plot.style_line, color=Trend == 1 ? color.green : Trend == -1 ? color.red : na)
plot(ex, 'Extremum', style=plot.style_circles, color=Trend == 1 ? color.lime : Trend == -1 ? color.fuchsia : na)
//}

////// FIBONACCI LEVELS ///////////
//{
state = Trend == 1 ? 'long' : 'short'

fib1Level = 61.8
fib2Level = 78.6
fib3Level = 88.6

f1 = ex + (trail - ex) * fib1Level / 100
f2 = ex + (trail - ex) * fib2Level / 100
f3 = ex + (trail - ex) * fib3Level / 100
l100 = trail + 0

Fib1 = plot(f1, 'Fib 1', style=plot.style_line, color=color.new(color.black, 0))
Fib2 = plot(f2, 'Fib 2', style=plot.style_line, color=color.new(color.black, 0))
Fib3 = plot(f3, 'Fib 3', style=plot.style_line, color=color.new(color.black, 0))
L100 = plot(l100, 'l100', style=plot.style_line, color=color.new(color.black, 0))

fill(Fib1, Fib2, color=state == 'long' ? color.green : state == 'short' ? color.red : na, transp=90)
fill(Fib2, Fib3, color=state == 'long' ? color.new(color.green, 70) : state == 'short' ? color.new(color.red, 70) : na, transp=90)
fill(Fib3, L100, color=state == 'long' ? color.new(color.green, 60) : state == 'short' ? color.new(color.red, 60) : na, transp=90)

l1 = state[1] == 'long' and ta.crossunder(norm_c, f1[1])
l2 = state[1] == 'long' and ta.crossunder(norm_c, f2[1])
l3 = state[1] == 'long' and ta.crossunder(norm_c, f3[1])
s1 = state[1] == 'short' and ta.crossover(norm_c, f1[1])
s2 = state[1] == 'short' and ta.crossover(norm_c, f2[1])
s3 = state[1] == 'short' and ta.crossover(norm_c, f3[1])

atr = ta.sma(trueRange, 14)

/////////// FIB PLOTS /////////////////.

plotshape(show_fib_entries and l1 ? low - atr : na, 'LS1', style=shape.triangleup, location=location.belowbar, color=color.new(color.yellow, 0), size=size.tiny)
plotshape(show_fib_entries and l2 ? low - 1.5 * atr : na, 'LS2', style=shape.triangleup, location=location.belowbar, color=color.new(color.yellow, 0), size=size.tiny)
plotshape(show_fib_entries and l3 ? low - 2 * atr : na, 'LS3', style=shape.triangleup, location=location.belowbar, color=color.new(color.yellow, 0), size=size.tiny)
plotshape(show_fib_entries and s1 ? high + atr : na, 'SS1', style=shape.triangledown, location=location.abovebar, color=color.new(color.purple, 0), size=size.tiny)
plotshape(show_fib_entries and s2 ? high + 1.5 * atr : na, 'SS2', style=shape.triangledown, location=location.abovebar, color=color.new(color.purple, 0), size=size.tiny)
plotshape(show_fib_entries and s3 ? high + 2 * atr : na, 'SS3', style=shape.triangledown, location=location.abovebar, color=color.new(color.purple, 0), size=size.tiny)
//}


//////////// FIB ALERTS /////////////////////
//{
alertcondition(l1, title='cross over Fib1', message='Price crossed below Fib1 level in long trend')
alertcondition(l2, title='cross over Fib2', message='Price crossed below Fib2 level in long trend')
alertcondition(l3, title='cross over Fib3', message='Price crossed below Fib3 level in long trend')
alertcondition(s1, title='cross under Fib1', message='Price crossed above Fib1 level in short trend')
alertcondition(s2, title='cross under Fib2', message='Price crossed above Fib2 level in short trend')
alertcondition(s3, title='cross under Fib3', message='Price crossed above Fib3 level in short trend')

alertcondition(fixnan(f1) != fixnan(f1[1]), title='Stop Line Change', message='Stop Line Change')
//}

a = input(3, title='Key Vaule. \'This changes the sensitivity\'')
c = input(5, title='ATR Period')
h = input(false, title='Signals from Heikin Ashi Candles')

xATR = ta.atr(c)
nLoss = a * xATR

src = h ? request.security(ticker.heikinashi(syminfo.tickerid), timeframe.period, close, lookahead=barmerge.lookahead_off) : close

xATRTrailingStop = 0.0
iff_1 = src > nz(xATRTrailingStop[1], 0) ? src - nLoss : src + nLoss
iff_2 = src < nz(xATRTrailingStop[1], 0) and src[1] < nz(xATRTrailingStop[1], 0) ? math.min(nz(xATRTrailingStop[1]), src + nLoss) : iff_1
xATRTrailingStop := src > nz(xATRTrailingStop[1], 0) and src[1] > nz(xATRTrailingStop[1], 0) ? math.max(nz(xATRTrailingStop[1]), src - nLoss) : iff_2

pos = 0
iff_3 = src[1] > nz(xATRTrailingStop[1], 0) and src < nz(xATRTrailingStop[1], 0) ? -1 : nz(pos[1], 0)
pos := src[1] < nz(xATRTrailingStop[1], 0) and src > nz(xATRTrailingStop[1], 0) ? 1 : iff_3

xcolor = pos == -1 ? color.red : pos == 1 ? color.green : color.blue

ema = ta.ema(src, 1)
above = ta.crossover(ema, xATRTrailingStop)
below = ta.crossover(xATRTrailingStop, ema)

buy = src > xATRTrailingStop and above
sell = src < xATRTrailingStop and below

barbuy = src > xATRTrailingStop
barsell = src < xATRTrailingStop



alertcondition(buy, 'UT Long', 'UT Long')
alertcondition(sell, 'UT Short', 'UT Short')

timeperiod= time>=timestamp(syminfo.timezone, 2020, 1, 1, 0, 0)
notintrade=strategy.position_size<=0
intrade=strategy.position_size>0

a1=ta.ema(src, length= 50)
b1=ta.ema(src, length=200)
c1=ta.ema(src, length=20)

lc1=  ta.crossover(c1, a1)
exitc1= ta.crossunder(c1, a1)
sl1= close<2* ta.atr(14)

plotshape(lc1 and notintrade, title='Buy', text='Buy', style=shape.labelup, location=location.belowbar, color=color.new(color.green, 0), textcolor=color.new(color.white, 0), size=size.tiny)
plotshape(exitc1 and notintrade, title='Sell', text='Sell', style=shape.labeldown, location=location.abovebar, color=color.new(color.red, 0), textcolor=color.new(color.white, 0), size=size.tiny)
plotshape(sl1 and notintrade, title='Stoploss', text='stoploss', style=shape.labeldown, location=location.abovebar, color=color.new(color.red, 0), textcolor=color.new(color.white, 0), size=size.tiny)