//@version=5
strategy(title="Double HUll and Turbo Oscillator [TradingMarketMist] P1",  overlay=true)

// Function to calculate the Hull Moving Average (HMA)
hma(src, length) =>
    wmaf = 2 * ta.wma(src, length / 2)
    hma = ta.wma(wmaf - ta.wma(src, length), math.floor(math.sqrt(length)))
    hma

// Function to calculate the first derivative
first_derivative(src, length) =>
    ta.sma(src, length) - ta.sma(src, 1)

// Function to check conditions
check_conditions(src, length) =>
    derivative = first_derivative(src, length)
    derivative > 0 ? 1 : (derivative < 0 ? -1 : 0)

// Settings for HMA 1
length_1 = input.int(20, minval=1, title="Length HMA 1")
src_1 = input(close, title="Source HMA 1")

// Settings for HMA 2
length_2 = input.int(198, minval=1, title="Length HMA 2")
src_2 = input(close, title="Source HMA 2")

// Calculation of the first HMA
hma1 = hma(src_1, length_1)

// Calculation of the second HMA
hma2 = hma(src_2, length_2)

// Checking conditions for HMA 1 and HMA 2


// Coloring the HMA lines based on conditions
hma_color_1 = hma1<hma2 ? color.red : color.green 
hma_color_2 = hma2<hma1 ? color.red : color.green 

// Plotting the HMA lines
plot(hma1, color=hma_color_1, linewidth=2, title="HMA 1")
plot(hma2, color=hma_color_2, linewidth=2, title="HMA 2")
lc1= ta.crossover(hma1,hma2)
exitc1=ta.crossunder(hma1, hma2)

// Coloring the bar based on the conditions of the HMA lines
plotshape(lc1, title='Buy', text='long', style=shape.labelup, location=location.belowbar, color=color.new(color.green, 0), textcolor=color.new(color.white, 0), size=size.tiny)
plotshape(exitc1, title='short', text='Sell', style=shape.labeldown, location=location.abovebar, color=color.new(color.red, 0), textcolor=color.new(color.white, 0), size=size.tiny)

x = input.int(25, "Index Period", minval = 1, group = "Calculation Settings")
rr = input.int(14, "Volume Flow Period", minval = 1, group = "Calculation Settings")
peakslen = input.int(500, "Normalization Period", minval = 1, group = "Calculation Settings")
thr = input.float(0.85, "High Interest Threshold", minval = 0.01, maxval = 0.99, group = "Calculation Settings")

green = input.color(color.rgb(0, 255, 187), "Heatmap Colour", group = "Appearance")
baset = input.int(99, "Base Transparency", minval = 1, group = "Appearance")
dumb = ta.pvi-ta.ema(ta.pvi,255)
smart = ta.nvi-ta.ema(ta.nvi,255)
drsi = ta.rsi(dumb, rr)
srsi = ta.rsi(smart, rr)
r = srsi/drsi //ratio shows if smart money is buying from dumb money selling and vice versa
sums = math.sum(r, x)
peak = ta.highest(sums, peakslen)
index = sums/peak

// Calculating
candledir = close > open ? 1 : -1
candlelen = math.abs(close-open)

valleyform = hma1>hma2
max_memory = 90

type bar
    float h = high
    float l = low
    float v = volume
    int   i = bar_index

//-----------------------------------------------------------------------------}
// Variables
//-----------------------------------------------------------------------------{

bar b = bar.new()

var hh = 0.0
var ll = 0.0
var aR = array.new_box()
var aS = array.new_line()

if valleyform
    aR.push(box.new(bar_index,high,bar_index, low, color.new(green, 100), 1, line.style_solid, extend.both, bgcolor = color.new(green, baset)))

