import * as monaco from 'monaco-editor';

// Get all syntax keys from your interpreter's syntax list
const syntaxElements = [
    
'open', 'high', 'low', 'close', 'volume', 'hl2', 'hlc3', 'hlcc4', 'ohlc4','symInfoMinMove', 'symInfoMinTick', 'symInfoPointValue', 'symInfoPrefix','symInfoPriceScale', 'symInfoRoot', 'symInfoSector', 'symInfoSession','symInfoShareholders', 'symInfoSharesOutstandingFloat','symInfoSharesOutstandingTotal',             'sma', 'ema', 'rsi', 'minvalue', 'maxvalue', 'taAccDist', 'taIII', 'taNVI', 'taOBV', 'taPVI', 'taPVT', 'taTR', 'taVWAP','taWAD', 'taWVAD', 'taAlma', 'taAtr', 'taBarsSince', 'taBb', 'taBbw', 'taCci','taChange', 'taCmo', 'taCog', 'taCorrelation', 'taCross', 'taCrossover','taCrossunder', 'taCum', 'taDev', 'taDmi', 'taEma', 'taFalling', 'taHighest','taHighestBars', 'taHma', 'taKc', 'taKcw', 'taLinReg', 'taLowest','taLowestBars', 'taMacd', 'taMax', 'taMedian', 'taMfi', 'taMin', 'taMode','taMom', 'taPercentile', 'taPercentRank', 'taPivotHigh', 'taPivotLow','taRange', 'taRising', 'taRma', 'taRoc', 'taRsi', 'taSar', 'taSma', 'taStdev','taStoch', 'taSuperTrend', 'taSwma', 'taTsi', 'taValueWhen', 'taVariance','taVwap', 'taVwma', 'taWma', 'taWpr', 'strategyAccountCurrency', 'strategyAvgLosingTrade','strategyAvgLosingTradePercent', 'strategyAvgTrade','strategyAvgTradePercent', 'strategyAvgWinningTrade','strategyAvgWinningTradePercent', 'strategyClosedTrades','strategyClosedTradesFirstIndex', 'strategyEquity', 'strategyEvenTrades','strategyGrossLoss', 'strategyGrossLossPercent', 'strategyGrossProfit','strategyGrossProfitPercent', 'strategyInitialCapital', 'strategyLossTrades','strategyMarginLiquidationPrice', 'strategyMaxContractsHeldAll','strategyMaxContractsHeldLong', 'strategyMaxContractsHeldShort','strategyMaxDrawdown', 'strategyMaxDrawdownPercent', 'strategyMaxRunup','strategyMaxRunupPercent', 'strategyNetProfit', 'strategyNetProfitPercent','strategyOpenProfit', 'strategyOpenProfitPercent', 'strategyOpenTrades','strategyOpenTradesCapitalHeld', 'strategyPositionAvgPrice','strategyPositionEntryName', 'strategyPositionSize', 'strategyWinTrades',             'dayOfMonth', 'dayOfWeek', 'hour', 'minute', 'month','second', 'time', 'timeClose', 'timeTradingDay', 'timeNow','weekOfYear', 'year', 'sessionIsFirstBar', 'sessionIsFirstBarRegular','sessionIsLastBar', 'sessionIsLastBarRegular', 'sessionIsMarket','sessionIsPostMarket', 'sessionIsPreMarket',             'boxAll', 'chartBgCol', 'chartFgCol', 'chartIsHeikinAshi','chartIsKagi', 'chartIsLineBreak', 'chartIsPnf', 'chartIsRange','chartIsRenko', 'chartIsStandard', 'chartLeftVisibleBarTime','chartRightVisibleBarTime', 'labelAll', 'lineAll', 'lineFillAll','polylineAll', 'tableAll', 'andOp', 'enumType', 'exportFunc', 'forLoop', 'forInLoop', 'ifCond', 'importFunc', 'methodFunc', 'notOp', 'orOp', 'switchCase', 'typeDef', 'let', 'letip', 'whileLoop','open','high','low','close','volume','barIndex','barStateIsConfirmed','barStateIsFirst','barStateIsHistory','barStateIsLast','barStateIsLastConfirmedHistory','barStateIsNew','barStateIsRealtime','boxAll','chartBgCol','chartFgCol','chartIsHeikinAshi','chartIsKagi','chartIsLineBreak','chartIsPnf','chartIsRange','chartIsRenko','chartIsStandard','chartLeftVisibleBarTime','chartRightVisibleBarTime','dayOfMonth','dayOfWeek','dividendsFutureAmount','dividendsFutureExDate','dividendsFuturePayDate','earningsFutureEps','earningsFuturePeriodEndTime','earningsFutureRevenue','earningsFutureTime','hl2','hlc3','hlcc4','hour','labelAll','lastBarIndex','lastBarTime','lineAll','lineFillAll','minute','month','na','ohlc4','polylineAll','second','sessionIsFirstBar','sessionIsFirstBarRegular','sessionIsLastBar','sessionIsLastBarRegular','sessionIsMarket','sessionIsPostMarket','sessionIsPreMarket','strategyAccountCurrency','strategyAvgLosingTrade','strategyAvgLosingTradePercent','strategyAvgTrade','strategyAvgTradePercent','strategyAvgWinningTrade','strategyAvgWinningTradePercent','strategyClosedTrades','strategyClosedTradesFirstIndex','strategyEquity','strategyEvenTrades','strategyGrossLoss','strategyGrossLossPercent','strategyGrossProfit','strategyGrossProfitPercent','strategyInitialCapital','strategyLossTrades','strategyMarginLiquidationPrice','strategyMaxContractsHeldAll','strategyMaxContractsHeldLong','strategyMaxContractsHeldShort','strategyMaxDrawdown','strategyMaxDrawdownPercent','strategyMaxRunup','strategyMaxRunupPercent','strategyNetProfit','strategyNetProfitPercent','strategyOpenProfit','strategyOpenProfitPercent','strategyOpenTrades','strategyOpenTradesCapitalHeld','strategyPositionAvgPrice','strategyPositionEntryName','strategyPositionSize','strategyWinTrades','symInfoBaseCurrency','symInfoCountry','symInfoCurrency','symInfoDescription','symInfoEmployees','symInfoExpirationDate','symInfoIndustry','symInfoMainTickerId','symInfoMinContract','symInfoMinMove','symInfoMinTick','symInfoPointValue','symInfoPrefix','symInfoPriceScale','symInfoRecommendationsBuy','symInfoRecommendationsBuyStrong','symInfoRecommendationsDate','symInfoRecommendationsHold','symInfoRecommendationsSell','symInfoRecommendationsSellStrong','symInfoRecommendationsTotal','symInfoRoot','symInfoSector','symInfoSession','symInfoShareholders','symInfoSharesOutstandingFloat','symInfoSharesOutstandingTotal','symInfoTargetPriceAverage','symInfoTargetPriceDate','symInfoTargetPriceEstimates','symInfoTargetPriceHigh','symInfoTargetPriceLow','symInfoTargetPriceMedian','symInfoTicker','symInfoTickerId','symInfoTimezone','symInfoType','symInfoVolumeType','taAccDist','taIII','taNVI','taOBV','taPVI','taPVT','taTR','taVWAP','taWAD','taWVAD','tableAll','time','timeClose','timeTradingDay','timeframeIsDaily','timeframeIsDWM','timeframeIsIntraday','timeframeIsMinutes','timeframeIsMonthly','timeframeIsSeconds','timeframeIsTicks','timeframeIsWeekly','timeframeMainPeriod','timeframeMultiplier','timeframePeriod','timeNow','weekOfYear','year','showStyleArea','showStyleAreaBr','showStyleCircles','showStyleColumns','showStyleCross','showStyleHistogram','showStyleLine','showStyleLineBr','showStyleStepLine','showStyleStepLineDiamond','showStyleStepLineBr','positionBottomCenter','positionBottomLeft','positionBottomRight','positionMiddleCenter','positionMiddleLeft','positionMiddleRight','positionTopCenter','positionTopLeft','positionTopRight','scaleLeft','scaleNone','scaleRight','sessionExtended','sessionRegular','settlementAsCloseInherit','settlementAsCloseOff','settlementAsCloseOn','shapeArrowDown','shapeArrowUp','shapeCircle','shapeCross','shapeDiamond','shapeFlag','shapeLabelDown','shapeLabelUp','shapeSquare','shapeTriangleDown','shapeTriangleUp','shapeXCross','sizeAuto','sizeHuge','sizeLarge','sizeNormal','sizeSmall','sizeTiny','splitsDenominator','splitsNumerator','strategyCash','strategyCommissionCashPerContract','strategyCommissionCashPerOrder','strategyCommissionPercent','strategyDirectionAll','strategyDirectionLong','strategyDirectionShort','strategyFixed','strategyLong','strategyOcaCancel','strategyOcaNone','strategyOcaReduce','strategyPercentOfEquity','strategyShort','textAlignBottom','textAlignCenter','textAlignLeft','textAlignRight','textAlignTop','textWrapAuto','textWrapNone','trueValue','xLocBarIndex','xLocBarTime','yLocAboveBar','yLocBelowBar','yLocPrice','adjustmentDividends','adjustmentNone','adjustmentSplits','alertFreqAll','alertFreqOncePerBar','alertFreqOncePerBarClose','backAdjustmentInherit','backAdjustmentOff','backAdjustmentOn','barMergeGapsOff','barMergeGapsOn','barMergeLookaheadOff','barMergeLookaheadOn','colAqua','colBlack','colBlue','colFuchsia','colGray','colGreen','colLime','colMaroon','colNavy','colOlive','colOrange','colPurple','colRed','colSilver','colTeal','colWhite','colYellow','currencyAUD','currencyBTC','currencyCAD','currencyCHF','currencyETH','currencyEUR','currencyGBP','currencyHKD','currencyINR','currencyJPY','currencyKRW','currencyMYR','currencyNOK','currencyNone','currencyNZD','currencyRUB','currencySEK','currencySGD','currencyTRY','currencyUSD','currencyUSDT','currencyZAR','dayOfWeekFriday','dayOfWeekMonday','dayOfWeekSaturday','dayOfWeekSunday','dayOfWeekThursday','dayOfWeekTuesday','dayOfWeekWednesday','displayAll','displayDataWindow','displayNone','displayPane','displayPriceScale','displayStatusLine','dividendsGross','dividendsNet','earningsActual','earningsEstimate','earningsStandardized','extendBoth','extendLeft','extendNone','extendRight','falseValue','fontFamilyDefault','fontFamilyMonospace','formatInherit','formatMinTick','formatPercent','formatPrice','formatVolume','hlineStyleDashed','hlineStyleDotted','hlineStyleSolid','labelStyleArrowDown','labelStyleArrowUp','labelStyleCircle','labelStyleCross','labelStyleDiamond','labelStyleFlag','labelStyleLabelCenter','labelStyleLabelDown','labelStyleLabelLeft','labelStyleLabelLowerLeft','labelStyleLabelLowerRight','labelStyleLabelRight','labelStyleLabelUp','labelStyleLabelUpperLeft','labelStyleLabelUpperRight','labelStyleNone','labelStyleSquare','labelStyleTextOutline','labelStyleTriangleDown','labelStyleTriangleUp','labelStyleXCross','lineStyleArrowBoth','lineStyleArrowLeft','lineStyleArrowRight','lineStyleDashed','lineStyleDotted','lineStyleSolid','locationAboveBar','locationAbsolute','locationBelowBar','locationBottom','locationTop','mathE','mathPhi','mathPi','mathRPhi','orderAscending','orderDescending', 'onTick', 'onBar','=', '+', '-', '*', '/', '%', '==','!', '!=', '>', '<', '>=', '<=', 'and', 'or', 'not', 'if', 'else', 'for', 'while', 'let', 'arr', 'bool', 'box', 'chartPoint', 'col', 'const', 'float', 'int', 'label',             'dayOfMonth', 'dayOfWeek', 'hour', 'minute', 'month','second', 'time', 'timeClose', 'timeTradingDay', 'timeNow','weekOfYear', 'year', 'sessionIsFirstBar', 'sessionIsFirstBarRegular','sessionIsLastBar', 'sessionIsLastBarRegular', 'sessionIsMarket','sessionIsPostMarket', 'sessionIsPreMarket',             'sma', 'ema', 'rsi', 'minvalue', 'maxvalue', 'taAccDist', 'taIII', 'taNVI', 'taOBV', 'taPVI', 'taPVT', 'taTR', 'taVWAP','taWAD', 'taWVAD', 'taAlma', 'taAtr', 'taBarsSince', 'taBb', 'taBbw', 'taCci','taChange', 'taCmo', 'taCog', 'taCorrelation', 'taCross', 'taCrossover','taCrossunder', 'taCum', 'taDev', 'taDmi', 'taEma', 'taFalling', 'taHighest','taHighestBars', 'taHma', 'taKc', 'taKcw', 'taLinReg', 'taLowest','taLowestBars', 'taMacd', 'taMax', 'taMedian', 'taMfi', 'taMin', 'taMode','taMom', 'taPercentile', 'taPercentRank', 'taPivotHigh', 'taPivotLow','taRange', 'taRising', 'taRma', 'taRoc', 'taRsi', 'taSar', 'taSma', 'taStdev','taStoch', 'taSuperTrend', 'taSwma', 'taTsi', 'taValueWhen', 'taVariance','taVwap', 'taVwma', 'taWma', 'taWpr',             'adjustmentDividends', 'adjustmentNone', 'adjustmentSplits','alertFreqAll', 'alertFreqOncePerBar', 'alertFreqOncePerBarClose','colAqua', 'colBlack', 'colBlue', 'colFuchsia', 'colGray','colGreen', 'colLime', 'colMaroon', 'colNavy', 'colOlive','colOrange', 'colPurple', 'colRed', 'colSilver', 'colTeal','colWhite', 'colYellow',            'symInfoRecommendationsBuy', 'symInfoRecommendationsBuyStrong','symInfoRecommendationsDate', 'symInfoRecommendationsHold','symInfoRecommendationsSell', 'symInfoRecommendationsSellStrong','symInfoRecommendationsTotal', 'symInfoTargetPriceAverage','symInfoTargetPriceDate', 'symInfoTargetPriceEstimates','symInfoTargetPriceHigh', 'symInfoTargetPriceLow','symInfoTargetPriceMedian', 'symInfoTicker', 'symInfoTickerId','symInfoTimezone', 'symInfoType', 'symInfoVolumeType', 'symInfoBaseCurrency', 'symInfoCountry', 'symInfoCurrency','symInfoDescription', 'symInfoEmployees', 'symInfoExpirationDate','symInfoIndustry', 'symInfoMainTickerId', 'symInfoMinContract',   'strategyAccountCurrency', 'strategyAvgLosingTrade','strategyAvgLosingTradePercent', 'strategyAvgTrade','strategyAvgTradePercent', 'strategyAvgWinningTrade','strategyAvgWinningTradePercent', 'strategyClosedTrades','strategyClosedTradesFirstIndex', 'strategyEquity', 'strategyEvenTrades','strategyGrossLoss', 'strategyGrossLossPercent', 'strategyGrossProfit','strategyGrossProfitPercent', 'strategyInitialCapital', 'strategyLossTrades','strategyMarginLiquidationPrice', 'strategyMaxContractsHeldAll','strategyMaxContractsHeldLong', 'strategyMaxContractsHeldShort','strategyMaxDrawdown', 'strategyMaxDrawdownPercent', 'strategyMaxRunup','strategyMaxRunupPercent', 'strategyNetProfit', 'strategyNetProfitPercent','strategyOpenProfit', 'strategyOpenProfitPercent', 'strategyOpenTrades','strategyOpenTradesCapitalHeld', 'strategyPositionAvgPrice','strategyPositionEntryName', 'strategyPositionSize', 'strategyWinTrades','sma', 'ema', 'rsi', 'minvalue', 'maxvalue','alertFunc', 'alertConditionFunc', 'arrAbs', 'arrAvg', 'arrBinarySearch', 'arrBinarySearchLeftmost', 'arrBinarySearchRightmost', 'arrClear', 'arrConcat', 'arrCopy', 'arrCovariance', 'arrEvery', 'arrFill', 'arrFirst', 'arrFrom', 'arrGet', 'arrIncludes', 'arrIndexOf', 'arrInsert', 'arrJoin', 'arrLast', 'arrLastIndexOf', 'arrMax', 'arrMedian', 'arrMin', 'arrMode', 'arrNewBool', 'arrNewBox', 'aryNewCol', 'arrNewFloat', 'arrNewInt', 'arrNewLabel', 'arrNewLine', 'arrNewLineFill', 'arrNewString', 'arrNewTable', 'arrNewType', 'arrPercentileLinearInterpolation', 'arrPercentileNearestRank', 'arrPercentRank', 'arrPop', 'arrPush', 'arrRange', 'arrRemove', 'arrReverse', 'arrSet', 'arrShift', 'arrSize', 'arrSlice', 'arrSome', 'arrSort', 'arrSortIndices', 'arrStandardize', 'arrStdev', 'arrSum', 'arrUnshift', 'arrVariance', 'barColFunc', 'bgColFunc', 'boolFunc', 'boxFunc', 'boxCopyFunc', 'boxDeleteFunc', 'boxGetBottomFunc', 'boxGetLeftFunc', 'boxGetRightFunc', 'boxGetTopFunc', 'boxNewFunc', 'boxSetBgColFunc', 'boxSetBorderColFunc', 'boxSetBorderStyleFunc', 'boxSetBorderWidthFunc', 'boxSetBottomFunc', 'boxSetBottomRightPointFunc', 'boxSetExtendFunc', 'boxSetLeftFunc', 'boxSetLeftTopFunc', 'boxSetRightFunc', 'boxSetRightBottomFunc', 'boxSetTextFunc', 'boxSetTextColFunc', 'boxSetTextFontFamilyFunc', 'boxSetTextHAlignFunc', 'boxSetTextSizeFunc', 'boxSetTextVAlignFunc', 'boxSetTextWrapFunc', 'boxSetTopFunc', 'boxSetTopLeftPointFunc', 'chartPointCopyFunc', 'chartPointFromIndexFunc', 'chartPointFromTimeFunc', 'chartPointNewFunc', 'chartPointNowFunc', 'colFunc', 'colBFunc', 'colFromGradientFunc', 'colGFunc', 'colNewFunc', 'colRFunc', 'colRgbFunc', 'colTFunc', 'dayOfMonthFunc', 'dayOfWeekFunc', 'fillFunc', 'fixNanFunc', 'floatFunc', 'hLineFunc', 'hourFunc', 'indicatorFunc', 'inputFunc', 'inputBoolFunc', 'inputColFunc', 'inputEnumFunc', 'inputFloatFunc', 'inputIntFunc', 'inputPriceFunc', 'inputSessionFunc', 'inputSourceFunc', 'inputStringFunc', 'inputSymbolFunc', 'inputTextAreaFunc', 'inputTimeFunc', 'inputTimeFrameFunc', 'intFunc', 'labelFunc', 'labelCopyFunc', 'labelDeleteFunc', 'labelGetTextFunc', 'labelGetXFunc', 'labelGetYFunc', 'labelNewFunc', 'labelSetColFunc', 'labelSetPointFunc', 'labelSetSizeFunc', 'labelSetStyleFunc', 'labelSetTextFunc', 'labelSetTextFontFamilyFunc', 'labelSetTextAlignFunc', 'labelSetTextColFunc', 'labelSetToolTipFunc', 'labelSetXFunc', 'labelSetXLocFunc', 'labelSetXYFunc', 'labelSetYFunc', 'labelSetYLocFunc', 'libraryFunc', 'lineFunc', 'lineCopyFunc', 'lineDeleteFunc', 'lineGetPriceFunc', 'lineGetX1Func', 'lineGetX2Func', 'lineGetY1Func', 'lineGetY2Func', 'lineNewFunc', 'lineSetColFunc', 'lineSetExtendFunc', 'lineSetFirstPointFunc', 'lineSetSecondPointFunc', 'lineSetStyleFunc', 'lineSetWidthFunc', 'lineSetX1Func', 'lineSetX2Func', 'lineSetXLocFunc', 'lineSetXY1Func', 'lineSetXY2Func', 'lineSetY1Func', 'lineSetY2Func', 'lineFillFunc', 'lineFillDeleteFunc', 'lineFillGetLine1Func', 'lineFillGetLine2Func', 'lineFillNewFunc', 'lineFillSetColFunc', 'logErrorFunc', 'logInfoFunc', 'logWarningFunc', 'mapClearFunc', 'mapContainsFunc', 'mapCopyFunc', 'mapGetFunc', 'mapKeysFunc', 'mapNewTypeFunc', 'mapPutFunc', 'mapPutAllFunc', 'mapRemoveFunc', 'mapSizeFunc', 'mapValuesFunc', 'mathAbsFunc', 'mathAcosFunc', 'mathAsinFunc', 'mathAtanFunc', 'mathAvgFunc', 'mathCeilFunc', 'mathCosFunc', 'mathExpFunc', 'mathFloorFunc', 'mathLogFunc', 'mathLog10Func', 'mathMaxFunc', 'mathMinFunc', 'mathPowFunc', 'mathRandomFunc', 'mathRoundFunc', 'mathRoundToMinTickFunc', 'mathSignFunc', 'mathSinFunc', 'mathSqrtFunc', 'mathSumFunc', 'mathTanFunc', 'mathToDegreesFunc', 'mathToRadiansFunc', 'matrixAddColFunc', 'matrixAddRowFunc', 'matrixAvgFunc', 'matrixColFunc', 'matrixColumnsFunc', 'matrixConcatFunc', 'matrixCopyFunc', 'matrixDetFunc', 'matrixDiffFunc', 'matrixEigenValuesFunc', 'matrixEigenVectorsFunc', 'matrixElementsCountFunc', 'matrixFillFunc', 'matrixGetFunc', 'matrixInvFunc', 'matrixIsAntiDiagonalFunc', 'matrixIsAntiSymmetricFunc', 'matrixIsBinaryFunc', 'matrixIsDiagonalFunc', 'matrixIsIdentityFunc', 'matrixIsSquareFunc', 'matrixIsStochasticFunc', 'matrixIsSymmetricFunc', 'matrixIsTriangularFunc', 'matrixIsZeroFunc', 'matrixKronFunc', 'matrixMaxFunc', 'matrixMedianFunc', 'matrixMinFunc', 'matrixModeFunc', 'matrixMultFunc', 'matrixNewTypeFunc', 'matrixPinvFunc', 'matrixPowFunc', 'matrixRankFunc', 'matrixRemoveColFunc', 'matrixRemoveRowFunc', 'matrixReshapeFunc', 'matrixReverseFunc', 'matrixRowFunc', 'matrixRowsFunc', 'matrixSetFunc', 'matrixSortFunc', 'matrixSubMatrixFunc', 'matrixSumFunc', 'matrixSwapColumnsFunc', 'matrixSwapRowsFunc', 'matrixTraceFunc', 'matrixTransposeFunc', 'maxBarsBackFunc', 'minuteFunc', 'monthFunc', 'naFunc', 'nzFunc', 'polylineDeleteFunc', 'polylineNewFunc','requestCurrencyRateFunc', 'requestDividendsFunc', 'requestEarningsFunc', 'requestEconomicFunc', 'requestFinancialFunc', 'requestQuandlFunc', 'requestSecurityFunc', 'requestSecurityLowerTfFunc', 'requestSeedFunc', 'requestSplitsFunc', 'runtimeErrorFunc', 'secondFunc', 'strContainsFunc', 'strEndsWithFunc', 'strFormatFunc', 'strFormatTimeFunc', 'strLengthFunc', 'strLowerFunc', 'strMatchFunc', 'strPosFunc', 'strRepeatFunc', 'strReplaceFunc', 'strReplaceAllFunc', 'strSplitFunc', 'strStartsWithFunc', 'strSubstringFunc', 'strToNumberFunc', 'strToStringFunc', 'strTrimFunc', 'strUpperFunc', 'strategyFunc', 'strategyCancelFunc', 'strategyCancelAllFunc', 'strategyCloseFunc', 'strategyCloseAllFunc', 'strategyClosedTradesCommissionFunc', 'strategyClosedTradesEntryBarIndexFunc', 'strategyClosedTradesEntryCommentFunc', 'strategyClosedTradesEntryIdFunc', 'strategyClosedTradesEntryPriceFunc', 'strategyClosedTradesEntryTimeFunc', 'strategyClosedTradesExitBarIndexFunc', 'strategyClosedTradesExitCommentFunc', 'strategyClosedTradesExitIdFunc', 'strategyClosedTradesExitPriceFunc', 'strategyClosedTradesExitTimeFunc', 'strategyClosedTradesMaxDrawdownFunc', 'strategyClosedTradesMaxDrawdownPercentFunc', 'strategyClosedTradesMaxRunupFunc', 'strategyClosedTradesMaxRunupPercentFunc', 'strategyClosedTradesProfitFunc', 'strategyClosedTradesProfitPercentFunc', 
'strategyClosedTradesSizeFunc', 'strategyConvertToAccountFunc', 'strategyConvertToSymbolFunc', 'strategyDefaultEntryQtyFunc', 'strategyEntryFunc', 'strategyExitFunc', 'strategyOpenTradesCommissionFunc', 'strategyOpenTradesEntryBarIndexFunc', 'strategyOpenTradesEntryCommentFunc', 'strategyOpenTradesEntryIdFunc', 'strategyOpenTradesEntryPriceFunc', 'strategyOpenTradesEntryTimeFunc', 'strategyOpenTradesMaxDrawdownFunc', 'strategyOpenTradesMaxDrawdownPercentFunc', 'strategyOpenTradesMaxRunupFunc', 'strategyOpenTradesMaxRunupPercentFunc', 'strategyOpenTradesProfitFunc', 'strategyOpenTradesProfitPercentFunc', 'strategyOpenTradesSizeFunc', 'strategyOrderFunc', 'strategyRiskAllowEntryInFunc', 'strategyRiskMaxConsLossDaysFunc', 'strategyRiskMaxDrawdownFunc', 'strategyRiskMaxIntradayFilledOrdersFunc', 'strategyRiskMaxIntradayLossFunc', 'strategyRiskMaxPositionSizeFunc', 'symInfoPrefixFunc', 'symInfoTickerFunc', 'timeFunc', 'timeCloseFunc', 'timeframeChangeFunc', 'timeframeFromSecondsFunc', 'timeframeInSecondsFunc', 'timestampFunc', 'weekOfYearFunc', 'yearFunc',             'show', 'showshape', 'showcond','solid', 'dotted', 'dashed','fontFamilyDefault', 'fontFamilyMonospace','extendBoth', 'extendLeft', 'extendNone', 'extendRight','hlineStyleDashed', 'hlineStyleDotted', 'hlineStyleSolid','tableFunc ','tableCellFunc','tableCellSetBgColFunc','tableCellSetHeightFunc' ,'tableCellSetTextFunc','tableCellSetTextColFunc','tableCellSetTextFontFamily','tableCellSetTextHAlignFunc','tableCellSetTextSizeFunc','tableCellSetTextVAlignFunc','tableCellSetToolTipFunc','tableCellSetWidthFunc','tableClearFunc ','tableDeleteFunc ','tableMergeCellsFunc','tableNewFunc','tableSetBgColFunc','tableSetBorderColFunc','tableSetBorderWidthFunc','tableSetFrameColFunc ','tableSetFrameWidthFunc','tableSetPositionFunc ',
'adLine', 'adOsc', 'adx', 'adxr', 'apo', 'aroon', 'aroonOsc', 'atr', 'avgPrice', 
                                        'bbands', 'beta', 'bop', 'cci', 'cmo', 'correl', 'dema', 'dx', 'ema', 
                                        'htDcPeriod', 'htDcPhase', 'htPhasor', 'htSine', 'htTrendline', 'htTrendMode',
                                        'kama', 'linearReg', 'linearRegAngle', 'linearRegIntercept', 'linearRegSlope',
                                        'ma', 'macd', 'macdExt', 'macdFix', 'mama', 'maxIndex', 'medPrice', 'mfi',
                                        'midPoint', 'midPrice', 'minIndex', 'minMax', 'minMaxIndex', 'minusDI', 'minusDM',
                                        'mom', 'natr', 'obv', 'plusDI', 'plusDM', 'ppo', 'roc', 'rocp', 'rocr', 'rocr100',
                                        'rsi', 'sar', 'sarExt', 'sma', 'stdDev', 'stoch', 'stochF', 'stochRsi', 'sum',
                                        't3', 'tema', 'tRange', 'trima', 'trix', 'tsf', 'typPrice', 'ultOsc', 'variance',
                                        'wclPrice', 'willr', 'wma',
                                        'pattern2Crows', 'pattern3BlackCrows', 'pattern3Inside', 'pattern3LineStrike',
                                        'pattern3StarsInSouth', 'pattern3WhiteSoldiers', 'patternAbandonedBaby',
                                        'patternAdvanceBlock', 'patternBeltHold', 'patternBreakaway', 'patternClosingMarubozu',
                                        'patternConcealBabySwallow', 'patternCounterattack', 'patternDarkCloud', 'patternDoji',
                                        'patternDojiStar', 'patternDragonflyDoji', 'patternEngulfing', 'patternEveningDojiStar',
                                        'patternEveningStar', 'patternGapSideSide', 'patternGravestoneDoji', 'patternHammer',
                                        'patternHangingMan', 'patternHarami', 'patternHaramiCross', 'patternHighWave',
                                        'patternHikkake', 'patternHikkakeMod', 'patternHomingPigeon', 'patternIdentical3Crows',
                                        'patternInNeck', 'patternInvertedHammer', 'patternKicking', 'patternKickingByLength',
                                        'patternLadderBottom', 'patternLongLeggedDoji', 'patternLongLine', 'patternMarubozu',
                                        'patternMatchingLow', 'patternMatHold', 'patternMorningDojiStar', 'patternMorningStar',
                                        'patternOnNeck', 'patternPiercing', 'patternRickshawMan', 'patternRiseFall3Methods',
                                        'patternSeparatingLines', 'patternShootingStar', 'patternShortLine', 'patternSpinningTop',
                                        'patternStalledPattern', 'patternStickSandwich', 'patternTakuri', 'patternTasukiGap',
                                        'patternThrusting', 'patternTristar', 'patternUnique3River', 'patternUpsideGap2Crows',
                                        'patternXsideGap3Methods'                
];
const registry = {
    'syntax_registry': {
        'type': 'syntax_evaluation',
        'elements': {
            // SECTION 1: BASIC PRICE DATA
            'open': {'type': 'price_data', 'params': {}},   
            'high': {'type': 'price_data', 'params': {}},   
            'low': {'type': 'price_data', 'params': {}},   
            'close': {'type': 'price_data', 'params': {}},   
            'volume': {'type': 'price_data', 'params': {}},   
            'hl2': {'type': 'price_data', 'params': {}},   
            'hlc3': {'type': 'price_data', 'params': {}},   
            'hlcc4': {'type': 'price_data', 'params': {}},   
            'ohlc4': {'type': 'price_data', 'params': {}},   

            // SECTION 2: BASIC PLOTTING FUNCTIONS
            'show': {
                'type': 'plotting',
                'params': {
                    'series': {'type': 'series', 'required': true},
                    'title': {'type': 'string', 'default': ''},
                    'color': {'type': 'color', 'default': 'auto'},
                    'linewidth': {'type': 'integer', 'default': 1},
                    'style': {'type': 'plotstyle', 'default': 'line'},
                    'trackprice': {'type': 'bool', 'default': false},
                    'histbase': {'type': 'integer', 'default': 0},
                    'offset': {'type': 'integer', 'default': 0},
                    'join': {'type': 'bool', 'default': false},
                    'editable': {'type': 'bool', 'default': true},
                    'show_last': {'type': 'integer', 'default': 0},
                    'display': {'type': 'display_type', 'default': 'all'},
                    'format': {'type': 'format_type', 'default': 'inherit'},
                    'precision': {'type': 'integer', 'default': 4},
                    'force_overlay': {'type': 'bool', 'default': false}
                }
            },
            'showshape': {
                'type': 'plotting',
                'params': {
                    'series': {'type': 'series', 'required': true},
                    'title': {'type': 'string', 'default': ''},
                    'location': {'type': 'string', 'default': 'abovebar'},
                    'color': {'type': 'color', 'default': 'blue'},
                    'style': {'type': 'string', 'default': 'circle'},
                    'size': {'type': 'string', 'default': 'auto'},
                    'text': {'type': 'string', 'default': ''},
                    'textcolor': {'type': 'color', 'default': 'black'},
                    'editable': {'type': 'bool', 'default': true}
                }
            },

            'showcond': {
                'type': 'visualization',
                'params': {
                    'condition': {'type': 'series', 'required': true},
                    'title': {'type': 'string', 'optional': true},
                    'color': {'type': 'color', 'optional': true},
                    'style': {'type': 'enum', 'values': ['line', 'stepline', 'histogram', 'circles', 'cross', 'area', 'columns'], 'default': 'line'},
                    'linewidth': {'type': 'integer', 'default': 1},
                    'display': {'type': 'enum', 'values': ['all', 'none'], 'default': 'all'}
                }
            },
            'showStyleLine': {'type': 'style_constant', 'params': {}},   
            'showStyleStepLine': {'type': 'style_constant', 'params': {}},   
            'showStyleHistogram': {'type': 'style_constant', 'params': {}},   
            'showStyleCircles': {'type': 'style_constant', 'params': {}},   
            'showStyleCross': {'type': 'style_constant', 'params': {}},   
            'showStyleArea': {'type': 'style_constant', 'params': {}},   
            'showStyleColumns': {'type': 'style_constant', 'params': {}},   

            'showStyleAreaBr': {'type': 'style_constant', 'params': {}},   
            'showStyleLineBr': {'type': 'style_constant', 'params': {}},   
            'showStyleStepLineBr': {'type': 'style_constant', 'params': {}},   
            'showStyleStepLineDiamond': {'type': 'style_constant', 'params': {}},   
            'positionTopLeft': {'type': 'position_constant', 'params': {}},   
            'positionTopCenter': {'type': 'position_constant', 'params': {}},   
            'positionTopRight': {'type': 'position_constant', 'params': {}},   
            'positionMiddleLeft': {'type': 'position_constant', 'params': {}},   
            'positionMiddleCenter': {'type': 'position_constant', 'params': {}},   
            'positionMiddleRight': {'type': 'position_constant', 'params': {}},   
            'positionBottomLeft': {'type': 'position_constant', 'params': {}},   
            'positionBottomCenter': {'type': 'position_constant', 'params': {}},   
            'positionBottomRight': {'type': 'position_constant', 'params': {}},   

            'scaleLeft': {'type': 'visualization', 'params': {}},   
            'scaleRight': {'type': 'visualization', 'params': {}},   
            'scaleNone': {'type': 'visualization', 'params': {}},   
            'shapeArrowUp': {'type': 'visualization', 'params': {}},   
            'shapeArrowDown': {'type': 'visualization', 'params': {}},   
            'shapeCircle': {'type': 'visualization', 'params': {}},   
            'shapeCross': {'type': 'visualization', 'params': {}},   
            'shapeDiamond': {'type': 'visualization', 'params': {}},   
            'shapeFlag': {'type': 'visualization', 'params': {}},   
            'shapeLabelUp': {'type': 'visualization', 'params': {}},   
            'shapeLabelDown': {'type': 'visualization', 'params': {}},   
            'shapeSquare': {'type': 'visualization', 'params': {}},   
            'shapeTriangleUp': {'type': 'visualization', 'params': {}},   
            'shapeTriangleDown': {'type': 'visualization', 'params': {}},   
            'shapeXCross': {'type': 'visualization', 'params': {}},   

            'sizeAuto': {'type': 'visualization', 'params': {}},   
            'sizeHuge': {'type': 'visualization', 'params': {}},   
            'sizeLarge': {'type': 'visualization', 'params': {}},   
            'sizeNormal': {'type': 'visualization', 'params': {}},   
            'sizeSmall': {'type': 'visualization', 'params': {}},   
            'sizeTiny': {'type': 'visualization', 'params': {}},   
            'textAlignCenter': {'type': 'visualization', 'params': {}},   
            'textAlignLeft': {'type': 'visualization', 'params': {}},   
            'textAlignRight': {'type': 'visualization', 'params': {}},   
            'textAlignTop': {'type': 'visualization', 'params': {}},   
            'textAlignBottom': {'type': 'visualization', 'params': {}},   
            'textWrapAuto': {'type': 'visualization', 'params': {}},   
            'textWrapNone': {'type': 'visualization', 'params': {}},   

            'lineStyleSolid': {'type': 'visualization', 'params': {}},   
            'lineStyleDashed': {'type': 'visualization', 'params': {}},   
            'lineStyleDotted': {'type': 'visualization', 'params': {}},   
            'lineStyleArrowLeft': {'type': 'visualization', 'params': {}},   
            'lineStyleArrowRight': {'type': 'visualization', 'params': {}},   
            'lineStyleArrowBoth': {'type': 'visualization', 'params': {}},   
            'locationAboveBar': {'type': 'visualization', 'params': {}},   
            'locationBelowBar': {'type': 'visualization', 'params': {}},   
            'locationTop': {'type': 'visualization', 'params': {}},   
            'locationBottom': {'type': 'visualization', 'params': {}},   
            'locationAbsolute': {'type': 'visualization', 'params': {}},   
            'extendNone': {'type': 'visualization', 'params': {}},   
            'extendLeft': {'type': 'visualization', 'params': {}},   
            'extendRight': {'type': 'visualization', 'params': {}},   
            'extendBoth': {'type': 'visualization', 'params': {}},   

            'labelStyleNone': {'type': 'visualization', 'params': {}},   
            'labelStyleLabel': {'type': 'visualization', 'params': {}},   
            'labelStyleArrowUp': {'type': 'visualization', 'params': {}},   
            'labelStyleArrowDown': {'type': 'visualization', 'params': {}},   
            'labelStyleCircle': {'type': 'visualization', 'params': {}},   
            'labelStyleSquare': {'type': 'visualization', 'params': {}},   
            'labelStyleDiamond': {'type': 'visualization', 'params': {}},   
            'labelStyleTriangleUp': {'type': 'visualization', 'params': {}},   
            'labelStyleTriangleDown': {'type': 'visualization', 'params': {}},   
            'labelStyleFlag': {'type': 'visualization', 'params': {}},   
            'labelStyleXCross': {'type': 'visualization', 'params': {}},   
            'labelStyleCross': {'type': 'visualization', 'params': {}},   
            'labelStyleText': {'type': 'visualization', 'params': {}},   
            'labelStyleTextOutline': {'type': 'visualization', 'params': {}},   

            'displayPane': {'type': 'visualization', 'params': {}},   
            'displayPriceScale': {'type': 'visualization', 'params': {}},   
            'hlineStyleSolid': {'type': 'visualization', 'params': {}},   
            'hlineStyleDashed': {'type': 'visualization', 'params': {}},   
            'hlineStyleDotted': {'type': 'visualization', 'params': {}},   
            'yLocPrice': {'type': 'visualization', 'params': {}},   
            'yLocAboveBar': {'type': 'visualization', 'params': {}},   
            'yLocBelowBar': {'type': 'visualization', 'params': {}},   
            'xLocBarIndex': {'type': 'visualization', 'params': {}},   
            'xLocBarTime': {'type': 'visualization', 'params': {}},   
            'fontFamilyDefault': {'type': 'visualization', 'params': {}},   
            'fontFamilyMonospace': {'type': 'visualization', 'params': {}},   

            // SECTION 3: TECHNICAL INDICATORS
            'taAccDist': {'type': 'indicator', 'params': {'high': {'type': 'series', 'default': 'high'}, 'low': {'type': 'series', 'default': 'low'}, 'close': {'type': 'series', 'default': 'close'}, 'volume': {'type': 'series', 'default': 'volume'}}},   
            'taAlma': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 9}, 'offset': {'type': 'float', 'default': 0.85}, 'sigma': {'type': 'float', 'default': 6}}},   
            'taAtr': {'type': 'indicator', 'params': {'length': {'type': 'integer', 'default': 14}}},   
            'taBarsSince': {'type': 'indicator', 'params': {'condition': {'type': 'series', 'required': true}}},   
            'taBb': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 20}, 'mult': {'type': 'float', 'default': 2}}},   
            'taBbw': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 20}, 'mult': {'type': 'float', 'default': 2}}},   
            'taCci': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'hlc3'}, 'length': {'type': 'integer', 'default': 20}}},   
            'taChange': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}}},   
            'taCmo': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 9}}},   
            'taCog': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 10}}},   
            'taCorrelation': {'type': 'indicator', 'params': {'source1': {'type': 'series', 'required': true}, 'source2': {'type': 'series', 'required': true}, 'length': {'type': 'integer', 'default': 20}}},   

            'taCross': {'type': 'indicator', 'params': {'source1': {'type': 'series', 'required': true}, 'source2': {'type': 'series', 'required': true}}},   
            'taCrossover': {'type': 'indicator', 'params': {'source1': {'type': 'series', 'required': true}, 'source2': {'type': 'series', 'required': true}}},   
            'taCrossunder': {'type': 'indicator', 'params': {'source1': {'type': 'series', 'required': true}, 'source2': {'type': 'series', 'required': true}}},   
            'taCum': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}}},   
            'taDev': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 20}}},   
            'taDmi': {'type': 'indicator', 'params': {'length': {'type': 'integer', 'default': 14}, 'smoothing': {'type': 'integer', 'default': 14}}},   
            'taEma': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 9}}},   
            'taFalling': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 1}}},   
            'taHighest': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'high'}, 'length': {'type': 'integer', 'default': 20}}},   

            'taHighestBars': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'high'}, 'length': {'type': 'integer', 'default': 20}}},   
            'taHma': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 9}}},   
            'taKc': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 20}, 'mult': {'type': 'float', 'default': 2}}},   
            'taKcw': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 20}, 'mult': {'type': 'float', 'default': 2}}},   
            'taLinReg': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 14}}},   
            'taLowest': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'low'}, 'length': {'type': 'integer', 'default': 20}}},   
            'taLowestBars': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'low'}, 'length': {'type': 'integer', 'default': 20}}},   
            'taMacd': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'fastLength': {'type': 'integer', 'default': 12}, 'slowLength': {'type': 'integer', 'default': 26}, 'signalLength': {'type': 'integer', 'default': 9}}},   
            'taMax': {'type': 'indicator', 'params': {'source1': {'type': 'series', 'required': true}, 'source2': {'type': 'series', 'required': true}}},   
            'taMedian': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 20}}},   
            'taMfi': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'hlc3'}, 'length': {'type': 'integer', 'default': 14}}},   
            'taMin': {'type': 'indicator', 'params': {'source1': {'type': 'series', 'required': true}, 'source2': {'type': 'series', 'required': true}}},   
            'taMode': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 20}}},   

            'taMom': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 10}}},   
            'taPercentile': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 20}, 'percentage': {'type': 'float', 'default': 50}}},   
            'taPercentRank': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 20}}},   
            'taPivotHigh': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'high'}, 'leftbars': {'type': 'integer', 'default': 5}, 'rightbars': {'type': 'integer', 'default': 5}}},   
            'taPivotLow': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'low'}, 'leftbars': {'type': 'integer', 'default': 5}, 'rightbars': {'type': 'integer', 'default': 5}}},   
            'taRange': {'type': 'indicator', 'params': {'length': {'type': 'integer', 'default': 14}}},   
            'taRising': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 1}}},   
            'taRma': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 14}}},   
            'taRoc': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 12}}},   
            'taRsi': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 14}}},   
            'taSar': {'type': 'indicator', 'params': {'start': {'type': 'float', 'default': 0.02}, 'increment': {'type': 'float', 'default': 0.02}, 'maximum': {'type': 'float', 'default': 0.2}}},   
            'taSma': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 9}}},   

            'taStdev': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 20}}},   
            'taStoch': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'high': {'type': 'series', 'default': 'high'}, 'low': {'type': 'series', 'default': 'low'}, 'length': {'type': 'integer', 'default': 14}, 'smoothK': {'type': 'integer', 'default': 3}, 'smoothD': {'type': 'integer', 'default': 3}}},   
            'taSuperTrend': {'type': 'indicator', 'params': {'factor': {'type': 'float', 'default': 3}, 'atrPeriod': {'type': 'integer', 'default': 10}}},   
            'taSwma': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}}},   
            'taTR': {'type': 'indicator', 'params': {'high': {'type': 'series', 'default': 'high'}, 'low': {'type': 'series', 'default': 'low'}, 'close': {'type': 'series', 'default': 'close'}}},   
            'taTsi': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'shortLength': {'type': 'integer', 'default': 25}, 'longLength': {'type': 'integer', 'default': 13}, 'signalLength': {'type': 'integer', 'default': 13}}},   
            'taValueWhen': {'type': 'indicator', 'params': {'condition': {'type': 'series', 'required': true}, 'source': {'type': 'series', 'required': true}, 'occurrence': {'type': 'integer', 'default': 0}}},   
            'taVariance': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 20}}},   
            'taVwap': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'hlc3'}, 'volume': {'type': 'series', 'default': 'volume'}}},   
            'taVwma': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'volume': {'type': 'series', 'default': 'volume'}, 'length': {'type': 'integer', 'default': 20}}},   
            'taWma': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 9}}},   
            'taWpr': {'type': 'indicator', 'params': {'length': {'type': 'integer', 'default': 14}}},   

            'taVWAP': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'hlc3'}, 'volume': {'type': 'series', 'default': 'volume'}}},   
            'taWAD': {'type': 'indicator', 'params': {'high': {'type': 'series', 'default': 'high'}, 'low': {'type': 'series', 'default': 'low'}, 'close': {'type': 'series', 'default': 'close'}}},   
            'taWVAD': {'type': 'indicator', 'params': {'high': {'type': 'series', 'default': 'high'}, 'low': {'type': 'series', 'default': 'low'}, 'close': {'type': 'series', 'default': 'close'}, 'volume': {'type': 'series', 'default': 'volume'}}},   
            'taIII': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'length': {'type': 'integer', 'default': 14}}},   
            'taNVI': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'volume': {'type': 'series', 'default': 'volume'}}},   
            'taOBV': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'volume': {'type': 'series', 'default': 'volume'}}},   
            'taPVI': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'volume': {'type': 'series', 'default': 'volume'}}},   
            'taPVT': {'type': 'indicator', 'params': {'source': {'type': 'series', 'default': 'close'}, 'volume': {'type': 'series', 'default': 'volume'}}},   

            // SECTION: STRATEGY FUNCTIONS
            'strategyAccountCurrency': {'type': 'strategy', 'params': {}},   
            'strategyAvgLosingTrade': {'type': 'strategy', 'params': {}},   
            'strategyAvgLosingTradePercent': {'type': 'strategy', 'params': {}},   
            'strategyAvgTrade': {'type': 'strategy', 'params': {}},   
            'strategyAvgTradePercent': {'type': 'strategy', 'params': {}},   
            'strategyAvgWinningTrade': {'type': 'strategy', 'params': {}},   
            'strategyAvgWinningTradePercent': {'type': 'strategy', 'params': {}},   
            'strategyClosedTrades': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesFirstIndex': {'type': 'strategy', 'params': {}},   
            'strategyEquity': {'type': 'strategy', 'params': {}},   
            'strategyEntry': {'type': 'strategy', 'params': {'id': {'type': 'string', 'required': true}, 'direction': {'type': 'string', 'required': true}, 'qty': {'type': 'float', 'default': 1.0}, 'limit': {'type': 'float', 'optional': true}, 'stop': {'type': 'float', 'optional': true}, 'comment': {'type': 'string', 'optional': true}, 'alert': {'type': 'bool', 'default': true}}},   
            'strategyExit': {'type': 'strategy', 'params': {'id': {'type': 'string', 'required': true}, 'from_entry': {'type': 'string', 'required': true}, 'qty': {'type': 'float', 'default': 'all'}, 'limit': {'type': 'float', 'optional': true}, 'stop': {'type': 'float', 'optional': true}, 'comment': {'type': 'string', 'optional': true}, 'alert': {'type': 'bool', 'default': true}}},   

            'strategyClose': {'type': 'strategy', 'params': {'id': {'type': 'string', 'required': true}, 'when': {'type': 'series', 'default': true}, 'comment': {'type': 'string', 'optional': true}, 'alert': {'type': 'bool', 'default': true}}},   
            'strategyCloseAll': {'type': 'strategy', 'params': {'comment': {'type': 'string', 'optional': true}, 'alert': {'type': 'bool', 'default': true}}},   
            'strategyEvenTrades': {'type': 'strategy', 'params': {}},   
            'strategyGrossLoss': {'type': 'strategy', 'params': {}},   
            'strategyGrossLossPercent': {'type': 'strategy', 'params': {}},   
            'strategyGrossProfit': {'type': 'strategy', 'params': {}},   
            'strategyGrossProfitPercent': {'type': 'strategy', 'params': {}},   
            'strategyInitialCapital': {'type': 'strategy', 'params': {'value': {'type': 'float', 'default': 100000}}},   
            'strategyLossTrades': {'type': 'strategy', 'params': {}},   
            'strategyMarginLiquidationPrice': {'type': 'strategy', 'params': {}},   
            'strategyMaxContractsHeldAll': {'type': 'strategy', 'params': {}},   
            'strategyMaxContractsHeldLong': {'type': 'strategy', 'params': {}},   
            'strategyMaxContractsHeldShort': {'type': 'strategy', 'params': {}},   
            'strategyMaxDrawdown': {'type': 'strategy', 'params': {}},   
            'strategyMaxDrawdownPercent': {'type': 'strategy', 'params': {}},   

            'strategyMaxRunup': {'type': 'strategy', 'params': {}},   
            'strategyMaxRunupPercent': {'type': 'strategy', 'params': {}},   
            'strategyNetProfit': {'type': 'strategy', 'params': {}},   
            'strategyNetProfitPercent': {'type': 'strategy', 'params': {}},   
            'strategyOpenProfit': {'type': 'strategy', 'params': {}},   
            'strategyOpenProfitPercent': {'type': 'strategy', 'params': {}},   
            'strategyOpenTrades': {'type': 'strategy', 'params': {}},   
            'strategyOpenTradesCapitalHeld': {'type': 'strategy', 'params': {}},   
            'strategyPositionAvgPrice': {'type': 'strategy', 'params': {}},   
            'strategyPositionEntryName': {'type': 'strategy', 'params': {}},   
            'strategyPositionSize': {'type': 'strategy', 'params': {}},   
            'strategyWinTrades': {'type': 'strategy', 'params': {}},   
            'strategyCash': {'type': 'strategy', 'params': {'value': {'type': 'float', 'default': 100000}}},   
            'strategyCommissionCashPerContract': {'type': 'strategy', 'params': {'value': {'type': 'float', 'default': 0}}},   
            'strategyCommissionCashPerOrder': {'type': 'strategy', 'params': {'value': {'type': 'float', 'default': 0}}},   
            'strategyCommissionPercent': {'type': 'strategy', 'params': {'value': {'type': 'float', 'default': 0}}},   

            'strategyDirectionAll': {'type': 'strategy', 'params': {'value': {'type': 'string', 'default': 'all'}}},   
            'strategyDirectionLong': {'type': 'strategy', 'params': {'value': {'type': 'string', 'default': 'long'}}},   
            'strategyDirectionShort': {'type': 'strategy', 'params': {'value': {'type': 'string', 'default': 'short'}}},   
            'strategyFixed': {'type': 'strategy', 'params': {'value': {'type': 'float', 'required': true}}},   
            'strategyLong': {'type': 'strategy', 'params': {'qty': {'type': 'float', 'default': 1.0}, 'limit': {'type': 'float', 'optional': true}, 'stop': {'type': 'float', 'optional': true}, 'oca_name': {'type': 'string', 'optional': true}, 'oca_type': {'type': 'string', 'default': 'none'}, 'comment': {'type': 'string', 'optional': true}, 'alert': {'type': 'bool', 'default': true}}},   
            'strategyOcaCancel': {'type': 'strategy', 'params': {'value': {'type': 'string', 'default': 'cancel'}}},   
            'strategyOcaNone': {'type': 'strategy', 'params': {'value': {'type': 'string', 'default': 'null'}}},   
            'strategyOcaReduce': {'type': 'strategy', 'params': {'value': {'type': 'string', 'default': 'reduce'}}},   
            'strategyPercentOfEquity': {'type': 'strategy', 'params': {'value': {'type': 'float', 'required': true}}},   
            'strategyShort': {'type': 'strategy', 'params': {'qty': {'type': 'float', 'default': 1.0}, 'limit': {'type': 'float', 'optional': true}, 'stop': {'type': 'float', 'optional': true}, 'oca_name': {'type': 'string', 'optional': true}, 'oca_type': {'type': 'string', 'default': 'none'}, 'comment': {'type': 'string', 'optional': true}, 'alert': {'type': 'bool', 'default': true}}},   

            'strategyRiskAllowEntryIn': {'type': 'strategy_risk', 'params': {'value': {'type': 'float', 'required': true}}},   
            'strategyRiskMaxConsLossDays': {'type': 'strategy_risk', 'params': {'value': {'type': 'integer', 'required': true}}},   
            'strategyRiskMaxDrawdown': {'type': 'strategy_risk', 'params': {'value': {'type': 'float', 'required': true}}},   
            'strategyRiskMaxIntradayFilledOrders': {'type': 'strategy_risk', 'params': {'value': {'type': 'integer', 'required': true}}},   
            'strategyRiskMaxIntradayLoss': {'type': 'strategy_risk', 'params': {'value': {'type': 'float', 'required': true}}},   
            'strategyRiskMaxPositionSize': {'type': 'strategy_risk', 'params': {'value': {'type': 'float', 'required': true}}},   
            'strategyClosedTradesCommission': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesEntryBarIndex': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesEntryComment': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesEntryId': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesEntryPrice': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesEntryTime': {'type': 'strategy', 'params': {}},   

            'strategyClosedTradesExitBarIndex': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesExitComment': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesExitId': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesExitPrice': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesExitTime': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesMaxDrawdown': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesMaxDrawdownPercent': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesMaxRunup': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesMaxRunupPercent': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesProfit': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesProfitPercent': {'type': 'strategy', 'params': {}},   
            'strategyClosedTradesSize': {'type': 'strategy', 'params': {}},   
            'strategyConvertToAccount': {'type': 'strategy_conversion', 'params': {'value': {'type': 'float', 'required': true}}},   
            'strategyConvertToSymbol': {'type': 'strategy_conversion', 'params': {'value': {'type': 'float', 'required': true}}},   

            'strategyDefaultEntryQty': {'type': 'strategy', 'params': {'value': {'type': 'float', 'default': 1.0}}},   
            'strategyOpenTradesCommission': {'type': 'strategy', 'params': {}},   
            'strategyOpenTradesEntryBarIndex': {'type': 'strategy', 'params': {}},   
            'strategyOpenTradesEntryComment': {'type': 'strategy', 'params': {}},   
            'strategyOpenTradesEntryId': {'type': 'strategy', 'params': {}},   
            'strategyOpenTradesEntryPrice': {'type': 'strategy', 'params': {}},   
            'strategyOpenTradesEntryTime': {'type': 'strategy', 'params': {}},   
            'strategyOpenTradesMaxDrawdown': {'type': 'strategy', 'params': {}},   
            'strategyOpenTradesMaxDrawdownPercent': {'type': 'strategy', 'params': {}},   
            'strategyOpenTradesMaxRunup': {'type': 'strategy', 'params': {}},   
            'strategyOpenTradesMaxRunupPercent': {'type': 'strategy', 'params': {}},   
            'strategyOpenTradesProfit': {'type': 'strategy', 'params': {}},   
            'strategyOpenTradesProfitPercent': {'type': 'strategy', 'params': {}},   
            'strategyOpenTradesSize': {'type': 'strategy', 'params': {}},   

            'strategyOrder': {'type': 'strategy', 'params': {'id': {'type': 'string', 'required': true}, 'direction': {'type': 'string', 'required': true}, 'qty': {'type': 'float', 'default': 1.0}, 'limit': {'type': 'float', 'optional': true}, 'stop': {'type': 'float', 'optional': true}, 'oca_name': {'type': 'string', 'optional': true}, 'oca_type': {'type': 'string', 'default': 'null'}, 'comment': {'type': 'string', 'optional': true}, 'alert': {'type': 'bool', 'default': true}, 'cancel': {'type': 'series', 'optional': true}}},   
            'strategyCancelAll': {'type': 'strategy', 'params': {'comment': {'type': 'string', 'optional': true}}},   
            'strategyCancel': {'type': 'strategy', 'params': {'id': {'type': 'string', 'required': true}, 'comment': {'type': 'string', 'optional': true}}},   
            'strategyClosePosition': {'type': 'strategy', 'params': {'comment': {'type': 'string', 'optional': true}, 'alert': {'type': 'bool', 'default': true}, 'immediately': {'type': 'bool', 'default': false}}},   
            'strategyEntryPrice': {'type': 'strategy', 'params': {}},   
            'strategyExitPrice': {'type': 'strategy', 'params': {}},   

            // SECTION: TIME FUNCTIONS AND PROPERTIES
            'time': {'type': 'time', 'params': {'timezone': {'type': 'string', 'optional': true}}},   
            'timeNow': {'type': 'time', 'params': {}},   
            'timeClose': {'type': 'time', 'params': {}},   
            'timeTradingDay': {'type': 'time', 'params': {}},   
            'year': {'type': 'time', 'params': {}},   
            'month': {'type': 'time', 'params': {}},   
            'weekOfYear': {'type': 'time', 'params': {}},   
            'dayOfMonth': {'type': 'time', 'params': {}},   
            'dayOfWeek': {'type': 'time', 'params': {}},   
            'hour': {'type': 'time', 'params': {}},   
            'minute': {'type': 'time', 'params': {}},   
            'second': {'type': 'time', 'params': {}},   

            'timeframe': {'type': 'time', 'params': {}},   
            'timeframeIsDaily': {'type': 'time', 'params': {}},   
            'timeframeIsDWM': {'type': 'time', 'params': {}},   
            'timeframeIsIntraday': {'type': 'time', 'params': {}},   
            'timeframeIsMinutes': {'type': 'time', 'params': {}},   
            'timeframeIsMonthly': {'type': 'time', 'params': {}},   
            'timeframeIsSeconds': {'type': 'time', 'params': {}},   
            'timeframeIsTicks': {'type': 'time', 'params': {}},   
            'timeframeIsWeekly': {'type': 'time', 'params': {}},   
            'timeframeMainPeriod': {'type': 'time', 'params': {}},   
            'timeframeMultiplier': {'type': 'time', 'params': {}},   
            'timeframePeriod': {'type': 'time', 'params': {}},   

            'sessionIsFirstBar': {'type': 'session', 'params': {}},   
            'sessionIsFirstBarRegular': {'type': 'session', 'params': {}},   
            'sessionIsLastBar': {'type': 'session', 'params': {}},   
            'sessionIsLastBarRegular': {'type': 'session', 'params': {}},   
            'sessionIsMarket': {'type': 'session', 'params': {}},   
            'sessionIsPostMarket': {'type': 'session', 'params': {}},   
            'sessionIsPreMarket': {'type': 'session', 'params': {}},   
            'sessionRegular': {'type': 'session_constant', 'params': {}},   
            'sessionExtended': {'type': 'session_constant', 'params': {}},   
            'timeFormat': {'type': 'time', 'params': {'time': {'type': 'integer', 'required': true}, 'format': {'type': 'string', 'required': true}}},   
            'timestamp': {'type': 'time', 'params': {'year': {'type': 'integer', 'required': true}, 'month': {'type': 'integer', 'required': true}, 'day': {'type': 'integer', 'required': true}, 'hour': {'type': 'integer', 'default': 0}, 'minute': {'type': 'integer', 'default': 0}, 'second': {'type': 'integer', 'default': 0}}},   

            'dayOfWeekFriday': {'type': 'time_constant', 'params': {}},   
            'dayOfWeekMonday': {'type': 'time_constant', 'params': {}},   
            'dayOfWeekSaturday': {'type': 'time_constant', 'params': {}},   
            'dayOfWeekSunday': {'type': 'time_constant', 'params': {}},   
            'dayOfWeekThursday': {'type': 'time_constant', 'params': {}},   
            'dayOfWeekTuesday': {'type': 'time_constant', 'params': {}},   
            'dayOfWeekWednesday': {'type': 'time_constant', 'params': {}},   
            'barStateIsConfirmed': {'type': 'bar_state', 'params': {}},   
            'barStateIsFirst': {'type': 'bar_state', 'params': {}},   
            'barStateIsHistory': {'type': 'bar_state', 'params': {}},   
            'barStateIsLast': {'type': 'bar_state', 'params': {}},   
            'barStateIsLastConfirmedHistory': {'type': 'bar_state', 'params': {}},   
            'barStateIsNew': {'type': 'bar_state', 'params': {}},   
            'barStateIsRealtime': {'type': 'bar_state', 'params': {}},   

            'timeFromUnix': {'type': 'time', 'params': {'unix': {'type': 'integer', 'required': true}}},   
            'timeToUnix': {'type': 'time', 'params': {'time': {'type': 'integer', 'required': true}}},   
            'timeToString': {'type': 'time', 'params': {'time': {'type': 'integer', 'required': true}, 'timezone': {'type': 'string', 'optional': true}}},   
            'timeSeriesCompare': {'type': 'time', 'params': {'time1': {'type': 'integer', 'required': true}, 'time2': {'type': 'integer', 'required': true}}},   
            'barTime': {'type': 'time', 'params': {}},   
            'lastBarTime': {'type': 'time', 'params': {}},   
            'firstBarTime': {'type': 'time', 'params': {}},   
            'time_close': {'type': 'time', 'params': {}},   

            // SECTION: ARRAY FUNCTIONS
            'arrAbs': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrAvg': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrBinarySearch': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'value': {'type': 'any', 'required': true}}},   
            'arrConcat': {'type': 'array', 'params': {'array1': {'type': 'array', 'required': true}, 'array2': {'type': 'array', 'required': true}}},   
            'arrCopy': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrFirst': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrLast': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrMax': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrMin': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   

            'arrPush': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'value': {'type': 'any', 'required': true}}},   
            'arrPop': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrShift': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrUnshift': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'value': {'type': 'any', 'required': true}}},   
            'arrSort': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'order': {'type': 'string', 'default': 'ascending'}}},   
            'arrReverse': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrSlice': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'start': {'type': 'integer', 'required': true}, 'end': {'type': 'integer', 'optional': true}}},   
            'arrMap': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'function': {'type': 'function', 'required': true}}},   
            'arrReduce': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'function': {'type': 'function', 'required': true}, 'initialValue': {'type': 'any', 'optional': true}}},   

            'arrFilter': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'function': {'type': 'function', 'required': true}}},   
            'arrIndexOf': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'value': {'type': 'any', 'required': true}, 'fromIndex': {'type': 'integer', 'default': 0}}},   
            'arrLastIndexOf': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'value': {'type': 'any', 'required': true}, 'fromIndex': {'type': 'integer', 'optional': true}}},   
            'arrIncludes': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'value': {'type': 'any', 'required': true}}},   
            'arrSome': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'function': {'type': 'function', 'required': true}}},   
            'arrEvery': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'function': {'type': 'function', 'required': true}}},   
            'arrJoin': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'separator': {'type': 'string', 'default': ','}}},   
            'arrFill': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'value': {'type': 'any', 'required': true}, 'start': {'type': 'integer', 'default': 0}, 'end': {'type': 'integer', 'optional': true}}},   
            'arrSize': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrClear': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrStdev': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrVariance': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrMode': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrMedian': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrSum': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrProduct': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrNew': {'type': 'array', 'params': {'size': {'type': 'integer', 'required': true}, 'value': {'type': 'any', 'optional': true}}},   
            'arrNewBool': {'type': 'array', 'params': {'size': {'type': 'integer', 'required': true}}},   
            'arrNewInt': {'type': 'array', 'params': {'size': {'type': 'integer', 'required': true}}},   
            'arrNewFloat': {'type': 'array', 'params': {'size': {'type': 'integer', 'required': true}}},   
            'arrNewString': {'type': 'array', 'params': {'size': {'type': 'integer', 'required': true}}},   
            'arrCovariance': {'type': 'array', 'params': {'array1': {'type': 'array', 'required': true}, 'array2': {'type': 'array', 'required': true}}},   
            'arrPercentile': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'percentage': {'type': 'float', 'required': true}}},   
            'arrPercentRank': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'value': {'type': 'float', 'required': true}}},   
            'arrStandardize': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrRange': {'type': 'array', 'params': {'start': {'type': 'integer', 'required': true}, 'end': {'type': 'integer', 'required': true}, 'step': {'type': 'integer', 'default': 1}}},   
            'arrGet': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'index': {'type': 'integer', 'required': true}}},   
            'arrSet': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'index': {'type': 'integer', 'required': true}, 'value': {'type': 'any', 'required': true}}},   
            'arrInsert': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'index': {'type': 'integer', 'required': true}, 'value': {'type': 'any', 'required': true}}},   
            'arrRemove': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'index': {'type': 'integer', 'required': true}}},   
            'arrFrom': {'type': 'array', 'params': {'value': {'type': 'any', 'required': true}}},   
            'arrBinarySearchLeftmost': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'value': {'type': 'any', 'required': true}}},   
            'arrBinarySearchRightmost': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'value': {'type': 'any', 'required': true}}},   
            'arrSortIndices': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}}},   
            'arrPercentileLinearInterpolation': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'percentage': {'type': 'float', 'required': true}}},   
            'arrPercentileNearestRank': {'type': 'array', 'params': {'array': {'type': 'array', 'required': true}, 'percentage': {'type': 'float', 'required': true}}},   

            // SECTION: BOX FUNCTIONS
            'boxNew': {'type': 'box', 'params': {'left': {'type': 'integer', 'required': true}, 'top': {'type': 'integer', 'required': true}, 'right': {'type': 'integer', 'required': true}, 'bottom': {'type': 'integer', 'required': true}}},   
            'boxCopy': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}}},   
            'boxDelete': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}}},   
            'boxGetLeft': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}}},   
            'boxGetTop': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}}},   
            'boxGetRight': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}}},   
            'boxGetBottom': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}}},   
            'boxSetLeft': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'value': {'type': 'integer', 'required': true}}},   
            'boxSetTop': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'value': {'type': 'integer', 'required': true}}},   
            'boxSetRight': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'value': {'type': 'integer', 'required': true}}},   
            'boxSetBottom': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'value': {'type': 'integer', 'required': true}}},   
            'boxSetBgColor': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'color': {'type': 'color', 'required': true}}},   
            'boxSetBorderColor': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'color': {'type': 'color', 'required': true}}},   
            'boxSetBorderStyle': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'style': {'type': 'string', 'required': true}}},   
            'boxSetBorderWidth': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'width': {'type': 'integer', 'required': true}}},   
            'boxSetText': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'text': {'type': 'string', 'required': true}}},   
            'boxSetTextColor': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'color': {'type': 'color', 'required': true}}},   
            'boxSetTextSize': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'size': {'type': 'integer', 'required': true}}},   
            'boxSetTextAlign': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'align': {'type': 'string', 'required': true}}},   
            'boxSetTextVAlign': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'valign': {'type': 'string', 'required': true}}},   
            'boxSetTextWrap': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'wrap': {'type': 'string', 'required': true}}},   

            // SECTION: COLOR FUNCTIONS
            'color': {'type': 'color', 'params': {'red': {'type': 'integer', 'required': true}, 'green': {'type': 'integer', 'required': true}, 'blue': {'type': 'integer', 'required': true}, 'transp': {'type': 'integer', 'default': 0}}},   
            'colorRed': {'type': 'color', 'params': {'color': {'type': 'color', 'required': true}}},   
            'colorGreen': {'type': 'color', 'params': {'color': {'type': 'color', 'required': true}}},   
            'colorBlue': {'type': 'color', 'params': {'color': {'type': 'color', 'required': true}}},   
            'colorAlpha': {'type': 'color', 'params': {'color': {'type': 'color', 'required': true}}},   
            'colorToString': {'type': 'color', 'params': {'color': {'type': 'color', 'required': true}}},   
            'colorFromString': {'type': 'color', 'params': {'string': {'type': 'string', 'required': true}}},   
            'colorBlend': {'type': 'color', 'params': {'color1': {'type': 'color', 'required': true}, 'color2': {'type': 'color', 'required': true}, 'weight': {'type': 'float', 'required': true}}},   
            'colorRgb': {'type': 'color', 'params': {'red': {'type': 'integer', 'required': true}, 'green': {'type': 'integer', 'required': true}, 'blue': {'type': 'integer', 'required': true}}},   
            'colAqua': {'type': 'color', 'params': {}, 'value': '//00FFFF'},   
            'colBlack': {'type': 'color', 'params': {}, 'value': '//000000'},   
            'colBlue': {'type': 'color', 'params': {}, 'value': '//0000FF'},   
            'colFuchsia': {'type': 'color', 'params': {}, 'value': '//FF00FF'},   
            'colGray': {'type': 'color', 'params': {}, 'value': '//808080'},   
            'colGreen': {'type': 'color', 'params': {}, 'value': '//008000'},   
            'colLime': {'type': 'color', 'params': {}, 'value': '//00FF00'},   
            'colMaroon': {'type': 'color', 'params': {}, 'value': '//800000'},   
            'colNavy': {'type': 'color', 'params': {}, 'value': '//000080'},   
            'colOlive': {'type': 'color', 'params': {}, 'value': '//808000'},   
            'colOrange': {'type': 'color', 'params': {}, 'value': '//FFA500'},   
            'colPurple': {'type': 'color', 'params': {}, 'value': '//800080'},   
            'colRed': {'type': 'color', 'params': {}, 'value': '//FF0000'},   
            'colSilver': {'type': 'color', 'params': {}, 'value': '//C0C0C0'},   
            'colTeal': {'type': 'color', 'params': {}, 'value': '//008080'},   
            'colWhite': {'type': 'color', 'params': {}, 'value': '//FFFFFF'},   
            'colYellow': {'type': 'color', 'params': {}, 'value': '//FFFF00'},   
            'colFromGradient': {'type': 'color', 'params': {'color1': {'type': 'color', 'required': true}, 'color2': {'type': 'color', 'required': true}, 'percentage': {'type': 'float', 'required': true}}},   
            'colB': {'type': 'color', 'params': {'color': {'type': 'color', 'required': true}}},   
            'colG': {'type': 'color', 'params': {'color': {'type': 'color', 'required': true}}},   
            'colR': {'type': 'color', 'params': {'color': {'type': 'color', 'required': true}}},   
            'colT': {'type': 'color', 'params': {'color': {'type': 'color', 'required': true}}},   

            // Currencies
            'currencyAUD': {'type': 'currency', 'category': 'fiat', 'value': 'AUD'},   
            'currencyBTC': {'type': 'currency', 'category': 'crypto', 'value': 'BTC'},   
            'currencyCAD': {'type': 'currency', 'category': 'fiat', 'value': 'CAD'},   
            'currencyCHF': {'type': 'currency', 'category': 'fiat', 'value': 'CHF'},   
            'currencyETH': {'type': 'currency', 'category': 'crypto', 'value': 'ETH'},   
            'currencyEUR': {'type': 'currency', 'category': 'fiat', 'value': 'EUR'},   
            'currencyGBP': {'type': 'currency', 'category': 'fiat', 'value': 'GBP'},   
            'currencyJPY': {'type': 'currency', 'category': 'fiat', 'value': 'JPY'},   
            'currencyUSD': {'type': 'currency', 'category': 'fiat', 'value': 'USD'},   
            'currencyUSDT': {'type': 'currency', 'category': 'crypto', 'value': 'USDT'},   

            // Display Settings
            'displayAll': {'type': 'display', 'category': 'visibility', 'value': 'all'},   
            'displayDataWindow': {'type': 'display', 'category': 'visibility', 'value': 'data_window'},   
            'displayNone': {'type': 'display', 'category': 'visibility', 'value': 'null'},   
               
            'displayStatusLine': {'type': 'display', 'category': 'visibility', 'value': 'status_line'},   

            // SECTION: INPUT FUNCTIONS
            'input': {'type': 'input', 'params': {'defval': {'type': 'any', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'tooltip': {'type': 'string', 'optional': true}}},   
            'inputInt': {'type': 'input', 'params': {'defval': {'type': 'integer', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'minval': {'type': 'integer', 'optional': true}, 'maxval': {'type': 'integer', 'optional': true}, 'step': {'type': 'integer', 'default': 1}, 'tooltip': {'type': 'string', 'optional': true}}},   
            'inputFloat': {'type': 'input', 'params': {'defval': {'type': 'float', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'minval': {'type': 'float', 'optional': true}, 'maxval': {'type': 'float', 'optional': true}, 'step': {'type': 'float', 'default': 0.1}, 'tooltip': {'type': 'string', 'optional': true}}},   
            'inputBool': {'type': 'input', 'params': {'defval': {'type': 'bool', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'tooltip': {'type': 'string', 'optional': true}}},   
            'inputString': {'type': 'input', 'params': {'defval': {'type': 'string', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'tooltip': {'type': 'string', 'optional': true}}},   
            'inputSymbol': {'type': 'input', 'params': {'defval': {'type': 'string', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'tooltip': {'type': 'string', 'optional': true}}},   
            'inputSource': {'type': 'input', 'params': {'defval': {'type': 'source', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'tooltip': {'type': 'string', 'optional': true}}},   
            'inputTime': {'type': 'input', 'params': {'defval': {'type': 'time', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'tooltip': {'type': 'string', 'optional': true}}},   
            'inputSession': {'type': 'input', 'params': {'defval': {'type': 'string', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'tooltip': {'type': 'string', 'optional': true}}},   
            'inputColor': {'type': 'input', 'params': {'defval': {'type': 'color', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'tooltip': {'type': 'string', 'optional': true}}},   
            'inputPrice': {'type': 'input', 'params': {'defval': {'type': 'float', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'tooltip': {'type': 'string', 'optional': true}}},   
            'inputTimeframe': {'type': 'input', 'params': {'defval': {'type': 'string', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'tooltip': {'type': 'string', 'optional': true}}},   
            'inputTextArea': {'type': 'input', 'params': {'defval': {'type': 'string', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'tooltip': {'type': 'string', 'optional': true}}},   
            'inputEnum': {'type': 'input', 'params': {'defval': {'type': 'string', 'required': true}, 'title': {'type': 'string', 'optional': true}, 'options': {'type': 'array', 'required': true}, 'tooltip': {'type': 'string', 'optional': true}}},   

            // SECTION: LABEL FUNCTIONS
            'labelNew': {'type': 'label', 'params': {'x': {'type': 'integer', 'required': true}, 'y': {'type': 'float', 'required': true}, 'text': {'type': 'string', 'required': true}, 'xloc': {'type': 'string', 'default': 'bar_index'}, 'yloc': {'type': 'string', 'default': 'price'}, 'color': {'type': 'color', 'optional': true}, 'style': {'type': 'string', 'optional': true}, 'textcolor': {'type': 'color', 'optional': true}, 'size': {'type': 'string', 'default': 'normal'}}},   
            'labelDelete': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}}},   
            'labelGet': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}}},   
            'labelSet': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'text': {'type': 'string', 'required': true}}},   
            'labelSetColor': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'color': {'type': 'color', 'required': true}}},   
            'labelSetStyle': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'style': {'type': 'string', 'required': true}}},   
            'labelSetX': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'x': {'type': 'integer', 'required': true}}},   
            'labelSetY': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'y': {'type': 'float', 'required': true}}},   
            'labelSetText': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'text': {'type': 'string', 'required': true}}},   
            'labelSetTextColor': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'color': {'type': 'color', 'required': true}}},   
            'labelSetSize': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'size': {'type': 'string', 'required': true}}},   
            'labelSetXLoc': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'xloc': {'type': 'string', 'required': true}}},   
            'labelSetYLoc': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'yloc': {'type': 'string', 'required': true}}},   
            'labelGetX': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}}},   
            'labelGetY': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}}},   
            'labelGetText': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}}},   
            'labelGetStyle': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}}},   
            'labelSetTooltip': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'tooltip': {'type': 'string', 'required': true}}},   
            'labelSetTextFont': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'font_family': {'type': 'string', 'required': true}}},   
            'labelSetTextAlign': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'align': {'type': 'string', 'required': true}}},   
            'labelCopy': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}}},   
            'labelDeleteAll': {'type': 'label', 'params': {}},   
            'labelGetAll': {'type': 'label', 'params': {}},   
            'labelSetPoint': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}, 'point': {'type': 'point', 'required': true}}},   
            'labelGetPoint': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}}},   
            'labelGetColor': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}}},   
            'labelGetTextColor': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}}},   
            'labelGetSize': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}}},   
            'labelGetXLoc': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}}},   
            'labelGetYLoc': {'type': 'label', 'params': {'id': {'type': 'label', 'required': true}}},   

            // More Array Functions
          
              

            // More Box Functions
            'boxSetExtend': {'type': 'box', 'params': {'box': {'type': 'box', 'required': true}, 'extend': {'type': 'string', 'required': true}}},   
            'boxAll': {'type': 'box', 'params': {}},   

            // More Input Functions
          
            'inputSeries': {'type': 'input', 'params': {'defval': {'type': 'series', 'required': true}, 'title': {'type': 'string', 'optional': true}}},   

            // SECTION: LINE FUNCTIONS
            'lineNew': {'type': 'line', 'params': {'x1': {'type': 'integer', 'required': true}, 'y1': {'type': 'float', 'required': true}, 'x2': {'type': 'integer', 'required': true}, 'y2': {'type': 'float', 'required': true}, 'extend': {'type': 'string', 'optional': true}, 'color': {'type': 'color', 'optional': true}, 'style': {'type': 'string', 'optional': true}, 'width': {'type': 'integer', 'optional': true}}},   
            'lineCopy': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}}},   
            'lineDelete': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}}},   
            'lineGetPrice': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'x': {'type': 'integer', 'required': true}}},   
            'lineGetX1': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}}},   
            'lineGetX2': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}}},   
            'lineGetY1': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}}},   
            'lineGetY2': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}}},   
            'lineSetColor': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'color': {'type': 'color', 'required': true}}},   
            'lineSetExtend': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'extend': {'type': 'string', 'required': true}}},   
            'lineSetStyle': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'style': {'type': 'string', 'required': true}}},   
            'lineSetWidth': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'width': {'type': 'integer', 'required': true}}},   
            'lineSetX1': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'x': {'type': 'integer', 'required': true}}},   
            'lineSetX2': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'x': {'type': 'integer', 'required': true}}},   
            'lineSetY1': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'y': {'type': 'float', 'required': true}}},   
            'lineSetY2': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'y': {'type': 'float', 'required': true}}},   
            'lineSetXY1': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'x': {'type': 'integer', 'required': true}, 'y': {'type': 'float', 'required': true}}},   
            'lineSetXY2': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'x': {'type': 'integer', 'required': true}, 'y': {'type': 'float', 'required': true}}},   
            'lineSetFirstPoint': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'point': {'type': 'point', 'required': true}}},   
            'lineSetSecondPoint': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'point': {'type': 'point', 'required': true}}},   
            'lineSetXLoc': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'xloc': {'type': 'string', 'required': true}}},   
            'lineAll': {'type': 'line', 'params': {}},   
            'lineFill': {'type': 'line', 'params': {'line1': {'type': 'line', 'required': true}, 'line2': {'type': 'line', 'required': true}, 'color': {'type': 'color', 'optional': true}}},   
            'lineFillAll': {'type': 'line', 'params': {}},   
            'lineFillDelete': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}}},   
            'lineFillGetLine1': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}}},   
            'lineFillGetLine2': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}}},   
            'lineFillNew': {'type': 'line', 'params': {'line1': {'type': 'line', 'required': true}, 'line2': {'type': 'line', 'required': true}, 'color': {'type': 'color', 'optional': true}}},   
            'lineFillSetColor': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}, 'color': {'type': 'color', 'required': true}}},   
            'lineDeleteAll': {'type': 'line', 'params': {}},   
            'lineGetAll': {'type': 'line', 'params': {}},   
            'lineGetStyle': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}}},   
            'lineGetWidth': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}}},   
            'lineGetExtend': {'type': 'line', 'params': {'id': {'type': 'line', 'required': true}}},   

            // SECTION: MATH FUNCTIONS
            'mathAbs': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathAcos': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathAsin': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathAtan': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathCeil': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathCos': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathExp': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathFloor': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathLog': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathLog10': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathMax': {'type': 'math', 'params': {'value1': {'type': 'float', 'required': true}, 'value2': {'type': 'float', 'required': true}}},   
            'mathMin': {'type': 'math', 'params': {'value1': {'type': 'float', 'required': true}, 'value2': {'type': 'float', 'required': true}}},   
            'mathPow': {'type': 'math', 'params': {'base': {'type': 'float', 'required': true}, 'exponent': {'type': 'float', 'required': true}}},   
            'mathRound': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathSign': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathSin': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathSqrt': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathTan': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathRandom': {'type': 'math', 'params': {'min': {'type': 'float', 'optional': true}, 'max': {'type': 'float', 'optional': true}}},   
            'mathRoundToMinTick': {'type': 'math', 'params': {'value': {'type': 'float', 'required': true}}},   
            'mathSum': {'type': 'math', 'params': {'values': {'type': 'array', 'required': true}}},   
            'mathToDegrees': {'type': 'math', 'params': {'radians': {'type': 'float', 'required': true}}},   
            'mathToRadians': {'type': 'math', 'params': {'degrees': {'type': 'float', 'required': true}}},   
            'mathAvg': {'type': 'math', 'params': {'values': {'type': 'array', 'required': true}}},   
            'mathStdev': {'type': 'math', 'params': {'values': {'type': 'array', 'required': true}}},   
            'mathVariance': {'type': 'math', 'params': {'values': {'type': 'array', 'required': true}}},   
            'mathMode': {'type': 'math', 'params': {'values': {'type': 'array', 'required': true}}},   
            'mathMedian': {'type': 'math', 'params': {'values': {'type': 'array', 'required': true}}},   
            'mathE': {'type': 'math', 'params': {}},   
            'mathPi': {'type': 'math', 'params': {}},   
            'mathPhi': {'type': 'math', 'params': {}},   
            'mathRPhi': {'type': 'math', 'params': {}},   

            // SECTION: MATRIX FUNCTIONS
            'matrixNew': {'type': 'matrix', 'params': {'rows': {'type': 'integer', 'required': true}, 'cols': {'type': 'integer', 'required': true}}},   
            'matrixGet': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'row': {'type': 'integer', 'required': true}, 'col': {'type': 'integer', 'required': true}}},   
            'matrixSet': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'row': {'type': 'integer', 'required': true}, 'col': {'type': 'integer', 'required': true}, 'value': {'type': 'float', 'required': true}}},   
            'matrixRows': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixCols': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixAdd': {'type': 'matrix', 'params': {'matrix1': {'type': 'matrix', 'required': true}, 'matrix2': {'type': 'matrix', 'required': true}}},   
            'matrixSub': {'type': 'matrix', 'params': {'matrix1': {'type': 'matrix', 'required': true}, 'matrix2': {'type': 'matrix', 'required': true}}},   
            'matrixMul': {'type': 'matrix', 'params': {'matrix1': {'type': 'matrix', 'required': true}, 'matrix2': {'type': 'matrix', 'required': true}}},   
            'matrixTranspose': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixDet': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixInv': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixRank': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixTrace': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixEigenValues': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixEigenVectors': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixCopy': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixConcat': {'type': 'matrix', 'params': {'matrix1': {'type': 'matrix', 'required': true}, 'matrix2': {'type': 'matrix', 'required': true}}},   
            'matrixRow': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'row': {'type': 'integer', 'required': true}}},   
            'matrixCol': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'col': {'type': 'integer', 'required': true}}},   
            'matrixDiff': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixIsSquare': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixIsDiagonal': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixIsSymmetric': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixIsIdentity': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixIsZero': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixIsTriangular': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixKron': {'type': 'matrix', 'params': {'matrix1': {'type': 'matrix', 'required': true}, 'matrix2': {'type': 'matrix', 'required': true}}},   
            'matrixPinv': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixPow': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'power': {'type': 'integer', 'required': true}}},   
            'matrixReshape': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'rows': {'type': 'integer', 'required': true}, 'cols': {'type': 'integer', 'required': true}}},   
            'matrixAddRow': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'row': {'type': 'array', 'required': true}}},   
            'matrixAddCol': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'col': {'type': 'array', 'required': true}}},   
            'matrixRemoveRow': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'index': {'type': 'integer', 'required': true}}},   
            'matrixRemoveCol': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'index': {'type': 'integer', 'required': true}}},   
            'matrixSwapRows': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'row1': {'type': 'integer', 'required': true}, 'row2': {'type': 'integer', 'required': true}}},   
            'matrixSwapCols': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'col1': {'type': 'integer', 'required': true}, 'col2': {'type': 'integer', 'required': true}}},   
            'matrixSort': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixReverse': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixSum': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixAvg': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixMax': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixMin': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixMode': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixMedian': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixFill': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'value': {'type': 'float', 'required': true}}},   
            'matrixSubMatrix': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}, 'startRow': {'type': 'integer', 'required': true}, 'endRow': {'type': 'integer', 'required': true}, 'startCol': {'type': 'integer', 'required': true}, 'endCol': {'type': 'integer', 'required': true}}},   
            'matrixIsAntiDiagonal': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixIsAntiSymmetric': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixIsBinary': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   
            'matrixIsStochastic': {'type': 'matrix', 'params': {'matrix': {'type': 'matrix', 'required': true}}},   

            

            // String Operations
            'strContains': {'type': 'string', 'category': 'search', 'operation': 'contains'},   
            'strEndsWith': {'type': 'string', 'category': 'search', 'operation': 'ends_with'},   
            'strFormat': {'type': 'string', 'category': 'formatting', 'operation': 'format'},   
            'strLength': {'type': 'string', 'category': 'property', 'operation': 'length'},   
            'strLower': {'type': 'string', 'category': 'case', 'operation': 'lowercase'},   
            'strMatch': {'type': 'string', 'category': 'search', 'operation': 'match'},   
            'strPos': {'type': 'string', 'category': 'search', 'operation': 'position'},   
            'strReplace': {'type': 'string', 'category': 'modification', 'operation': 'replace'},   
            'strReplaceAll': {'type': 'string', 'category': 'modification', 'operation': 'replace_all'},   
            'strSplit': {'type': 'string', 'category': 'modification', 'operation': 'split'},   
            'strStartsWith': {'type': 'string', 'category': 'search', 'operation': 'starts_with'},   
            'strSubstring': {'type': 'string', 'category': 'modification', 'operation': 'substring'},   
            'strToNumber': {'type': 'string', 'category': 'conversion', 'operation': 'to_number'},   
            'strToString': {'type': 'string', 'category': 'conversion', 'operation': 'to_string'},   
            'strTrim': {'type': 'string', 'category': 'modification', 'operation': 'trim'},   
            'strUpper': {'type': 'string', 'category': 'case', 'operation': 'uppercase'},   

            // Chart Functions
            'chartPointCopy': {'type': 'chart', 'category': 'point', 'operation': 'copy'},   
            'chartPointFromIndex': {'type': 'chart', 'category': 'point', 'operation': 'from_index'},   
            'chartPointFromTime': {'type': 'chart', 'category': 'point', 'operation': 'from_time'},   
            'chartPointNew': {'type': 'chart', 'category': 'point', 'operation': 'new'},   
            'chartPointNow': {'type': 'chart', 'category': 'point', 'operation': 'now'},   

              

            // Table Functions
            'tableNew': {'type': 'table', 'params': {'columns': {'type': 'integer', 'required': true}, 'rows': {'type': 'integer', 'required': true}}},   
            'tableCell': {'type': 'table', 'params': {'table': {'type': 'table', 'required': true}, 'column': {'type': 'integer', 'required': true}, 'row': {'type': 'integer', 'required': true}}},   
            'tableCellSet': {'type': 'table', 'params': {'table': {'type': 'table', 'required': true}, 'column': {'type': 'integer', 'required': true}, 'row': {'type': 'integer', 'required': true}, 'value': {'type': 'any', 'required': true}}},   
            'tableDelete': {'type': 'table', 'params': {'table': {'type': 'table', 'required': true}}},   
            'tableClear': {'type': 'table', 'params': {'table': {'type': 'table', 'required': true}}},   
            'tableAll': {'type': 'table', 'params': {}},   

            // Request Function
             

            // Alert Functions
            'alert': {'type': 'alert', 'params': {'message': {'type': 'string', 'required': true}, 'freq': {'type': 'string', 'optional': true}}},   
            'alertCondition': {'type': 'alert', 'params': {'condition': {'type': 'bool', 'required': true}, 'message': {'type': 'string', 'required': true}}},   

            // Log Functions
            'logInfo': {'type': 'log', 'params': {'message': {'type': 'string', 'required': true}}},   
            'logWarning': {'type': 'log', 'params': {'message': {'type': 'string', 'required': true}}},   
            'logError': {'type': 'log', 'params': {'message': {'type': 'string', 'required': true}}},   

            // Adjustment Constants
            'backAdjustmentInherit': {'type': 'adjustment', 'category': 'back', 'operation': 'inherit'},   
            'backAdjustmentOff': {'type': 'adjustment', 'category': 'back', 'operation': 'off'},   
            'backAdjustmentOn': {'type': 'adjustment', 'category': 'back', 'operation': 'on'},   
            'settlementAsCloseInherit': {'type': 'adjustment', 'category': 'settlement', 'operation': 'inherit'},   
            'settlementAsCloseOff': {'type': 'adjustment', 'category': 'settlement', 'operation': 'off'},   
            'settlementAsCloseOn': {'type': 'adjustment', 'category': 'settlement', 'operation': 'on'},   

            // Format Settings
            'formatInherit': {'type': 'format', 'category': 'inheritance', 'operation': 'inherit'},   
            'formatMinTick': {'type': 'format', 'category': 'price', 'operation': 'min_tick'},   
            'formatPercent': {'type': 'format', 'category': 'number', 'operation': 'percent'},   
            'formatPrice': {'type': 'format', 'category': 'price', 'operation': 'price'},   
            'formatVolume': {'type': 'format', 'category': 'volume', 'operation': 'volume'},   

            // Earnings and Dividends
            'earningsActual': {'type': 'earnings', 'category': 'report', 'operation': 'actual'},   
            'earningsEstimate': {'type': 'earnings', 'category': 'report', 'operation': 'estimate'},   
            'earningsStandardized': {'type': 'earnings', 'category': 'report', 'operation': 'standardized'},   
            'dividendsGross': {'type': 'dividends', 'category': 'payment', 'operation': 'gross'},   
            'dividendsNet': {'type': 'dividends', 'category': 'payment', 'operation': 'net'},   
            'dividendsFutureAmount': {'type': 'dividends', 'category': 'future', 'operation': 'amount'},   
            'dividendsFutureExDate': {'type': 'dividends', 'category': 'future', 'operation': 'ex_date'},   
            'dividendsFuturePayDate': {'type': 'dividends', 'category': 'future', 'operation': 'pay_date'},   

            
            'chartBgCol': {'type': 'chart', 'category': 'color', 'default': 'white'},   
            'chartFgCol': {'type': 'chart', 'category': 'color', 'default': 'black'},   
            'chartIsHeikinAshi': {'type': 'chart', 'category': 'type', 'default': false},   
            'chartIsKagi': {'type': 'chart', 'category': 'type', 'default': false},   
            'chartIsLineBreak': {'type': 'chart', 'category': 'type', 'default': false},   
            'chartIsPnf': {'type': 'chart', 'category': 'type', 'default': false},   
            'chartIsRange': {'type': 'chart', 'category': 'type', 'default': false},   
            'chartIsRenko': {'type': 'chart', 'category': 'type', 'default': false},   
            'chartIsStandard': {'type': 'chart', 'category': 'type', 'default': true},   
            'chartLeftVisibleBarTime': {'type': 'chart', 'category': 'time', 'default': 0},   
            'chartRightVisibleBarTime': {'type': 'chart', 'category': 'time', 'default': 0},   
            'labelAll': {'type': 'chart', 'category': 'collection', 'items': 'label'},   
            
            'polylineAll': {'type': 'chart', 'category': 'collection', 'items': 'polyline'},   

            // Control Flow
            'andOp': {'type': 'control', 'category': 'logical', 'operation': 'and'},   
            'enumType': {'type': 'control', 'category': 'type', 'operation': 'enum'},   
            'exportFunc': {'type': 'control', 'category': 'module', 'operation': 'export'},   
            'forLoop': {'type': 'control', 'category': 'loop', 'operation': 'for'},   
            'forInLoop': {'type': 'control', 'category': 'loop', 'operation': 'forIn'},   
            'ifCond': {'type': 'control', 'category': 'conditional', 'operation': 'if'},   
            'importFunc': {'type': 'control', 'category': 'module', 'operation': 'import'},   
            'methodFunc': {'type': 'control', 'category': 'function', 'operation': 'method'},   
            'notOp': {'type': 'control', 'category': 'logical', 'operation': 'not'},   
            'orOp': {'type': 'control', 'category': 'logical', 'operation': 'or'},   
            'switchCase': {'type': 'control', 'category': 'conditional', 'operation': 'switch'},   
            'typeDef': {'type': 'control', 'category': 'type', 'operation': 'typedef'},   
            'whileLoop': {'type': 'control', 'category': 'loop', 'operation': 'while'},   

            // Operators
            '=': {'type': 'operator', 'category': 'assignment'},   
            '+': {'type': 'operator', 'category': 'arithmetic'},   
            '-': {'type': 'operator', 'category': 'arithmetic'},   
            '*': {'type': 'operator', 'category': 'arithmetic'},   
            '/': {'type': 'operator', 'category': 'arithmetic'},   
            '%': {'type': 'operator', 'category': 'arithmetic'},   
            '==': {'type': 'operator', 'category': 'comparison'},   
            '!=': {'type': 'operator', 'category': 'comparison'},   
            '>': {'type': 'operator', 'category': 'comparison'},   
            '<': {'type': 'operator', 'category': 'comparison'},   
            '>=': {'type': 'operator', 'category': 'comparison'},   
            '<=': {'type': 'operator', 'category': 'comparison'},   

               

            // Boolean Values
            'trueValue': {'type': 'boolean', 'category': 'constant', 'value': true},   
            'falseValue': {'type': 'boolean', 'category': 'constant', 'value': false},   

            // Map Functions
            'mapNew': {'type': 'map', 'params': {}},   
            'mapGet': {'type': 'map', 'params': {'map': {'type': 'map', 'required': true}, 'key': {'type': 'string', 'required': true}}},   
            'mapSet': {'type': 'map', 'params': {'map': {'type': 'map', 'required': true}, 'key': {'type': 'string', 'required': true}, 'value': {'type': 'any', 'required': true}}},   
            'mapKeys': {'type': 'map', 'params': {'map': {'type': 'map', 'required': true}}},   
            'mapValues': {'type': 'map', 'params': {'map': {'type': 'map', 'required': true}}},   
            'mapSize': {'type': 'map', 'params': {'map': {'type': 'map', 'required': true}}},   

            // Bar State Indicators
            'barIndex': {'type': 'bar', 'category': 'state', 'operation': 'index'},      

               

            
            // Data Types
            'Numeric': {'type': 'datatype', 'category': 'primitive', 'value': 'numeric'},   
            'Boolean': {'type': 'datatype', 'category': 'primitive', 'value': 'boolean'},   
            'String': {'type': 'datatype', 'category': 'primitive', 'value': 'string'},   
            'Series': {'type': 'datatype', 'category': 'complex', 'value': 'series'},   

            'symInfoBaseCurrency': {'type': 'string', 'value': null, 'description': 'Base currency of the symbol'},   
            'symInfoCountry': {'type': 'string', 'value': null, 'description': 'Country of the symbol'},   
            'symInfoCurrency': {'type': 'string', 'value': null, 'description': 'Currency of the symbol'},   
            'symInfoDescription': {'type': 'string', 'value': null, 'description': 'Description of the symbol'},   
            'symInfoEmployees': {'type': 'integer', 'value': null, 'description': 'Number of employees'},   
            'symInfoExpirationDate': {'type': 'time', 'value': null, 'description': 'Expiration date of the symbol'},   
            'symInfoIndustry': {'type': 'string', 'value': null, 'description': 'Industry of the symbol'},   
            'symInfoMainTickerId': {'type': 'string', 'value': null, 'description': 'Main ticker ID'},   
            'symInfoMinContract': {'type': 'float', 'value': null, 'description': 'Minimum contract size'},   
            'symInfoRecommendationsBuy': {'type': 'integer', 'value': null, 'description': 'Number of buy recommendations'},   
            'symInfoRecommendationsBuyStrong': {'type': 'integer', 'value': null, 'description': 'Number of strong buy recommendations'},   
            'symInfoRecommendationsDate': {'type': 'time', 'value': null, 'description': 'Date of recommendations'},   
            'symInfoRecommendationsHold': {'type': 'integer', 'value': null, 'description': 'Number of hold recommendations'},   
            'symInfoRecommendationsSell': {'type': 'integer', 'value': null, 'description': 'Number of sell recommendations'},   
            'symInfoRecommendationsSellStrong': {'type': 'integer', 'value': null, 'description': 'Number of strong sell recommendations'},   
            'symInfoRecommendationsTotal': {'type': 'integer', 'value': null, 'description': 'Total number of recommendations'},   
            'symInfoTargetPriceAverage': {'type': 'float', 'value': null, 'description': 'Average target price'},   
            'symInfoTargetPriceDate': {'type': 'time', 'value': null, 'description': 'Date of target price'},   
            'symInfoTargetPriceEstimates': {'type': 'integer', 'value': null, 'description': 'Number of price estimates'},   
            'symInfoTargetPriceHigh': {'type': 'float', 'value': null, 'description': 'Highest target price'},   
            'symInfoTargetPriceLow': {'type': 'float', 'value': null, 'description': 'Lowest target price'},   
            'symInfoTargetPriceMedian': {'type': 'float', 'value': null, 'description': 'Median target price'},   
            'symInfoVolumeType': {'type': 'string', 'value': null, 'description': 'Type of volume data'},   

            'requestCurrencyRate': {'type': 'function', 'params': {'from_currency': {'type': 'string'}, 'to_currency': {'type': 'string'}, 'timestamp': {'type': 'time'}}, 'returns': 'float'},   
            'requestDividends': {'type': 'function', 'params': {'symbol': {'type': 'string'}, 'from_date': {'type': 'time'}, 'to_date': {'type': 'time'}}, 'returns': 'array'},   
            'requestEarnings': {'type': 'function', 'params': {'symbol': {'type': 'string'}, 'from_date': {'type': 'time'}, 'to_date': {'type': 'time'}}, 'returns': 'array'},   
            'requestEconomic': {'type': 'function', 'params': {'indicator': {'type': 'string'}, 'from_date': {'type': 'time'}, 'to_date': {'type': 'time'}}, 'returns': 'array'},   
            'requestFinancial': {'type': 'function', 'params': {'symbol': {'type': 'string'}, 'statement': {'type': 'string'}, 'period': {'type': 'string'}}, 'returns': 'array'},   
            'requestQuandl': {'type': 'function', 'params': {'code': {'type': 'string'}, 'from_date': {'type': 'time'}, 'to_date': {'type': 'time'}}, 'returns': 'array'},   
            'requestSecurity': {'type': 'function', 'params': {'symbol': {'type': 'string'}, 'resolution': {'type': 'string'}, 'from_date': {'type': 'time'}, 'to_date': {'type': 'time'}}, 'returns': 'array'},   
            'requestSecurityLowerTf': {'type': 'function', 'params': {'symbol': {'type': 'string'}, 'resolution': {'type': 'string'}, 'from_date': {'type': 'time'}, 'to_date': {'type': 'time'}, 'timeframe': {'type': 'string'}}, 'returns': 'array'},   
            'requestSeed': {'type': 'function', 'params': {'seed_value': {'type': 'integer'}}, 'returns': 'integer'},   
            'requestSplits': {'type': 'function', 'params': {'symbol': {'type': 'string'}, 'from_date': {'type': 'time'}, 'to_date': {'type': 'time'}}, 'returns': 'array'},   

            'runtimeError': {'type': 'function', 'params': {'message': {'type': 'string'}}, 'returns': 'void'},   
            'fixNan': {'type': 'function', 'params': {'value': {'type': 'float'}, 'replacement': {'type': 'float'}}, 'returns': 'float'},   
            'nz': {'type': 'function', 'params': {'value': {'type': 'series'}, 'replacement': {'type': 'series', 'optional': true}}, 'returns': 'series'},   
            'na': {'type': 'function', 'params': {'value': {'type': 'series'}}, 'returns': 'bool'},   

            'barCol': {'type': 'function', 'params': {'color': {'type': 'color'}}, 'returns': 'void'},   
            'maxBarsBack': {'type': 'function', 'params': {'buffer': {'type': 'series'}, 'max_bars': {'type': 'integer'}}, 'returns': 'void'},   
            'library': {'type': 'function', 'params': {'name': {'type': 'string'}, 'version': {'type': 'string'}, 'code': {'type': 'string'}}, 'returns': 'void'},   

            'barMergeGapsOff': {'type': 'const', 'value': 'barmerge_gaps_off', 'returns': 'string'},   
            'barMergeGapsOn': {'type': 'const', 'value': 'barmerge_gaps_on', 'returns': 'string'},   
            'barMergeLookaheadOff': {'type': 'const', 'value': 'barmerge_lookahead_off', 'returns': 'string'},   
            'barMergeLookaheadOn': {'type': 'const', 'value': 'barmerge_lookahead_on', 'returns': 'string'},   

            'currencyHKD': {'type': 'const', 'value': 'HKD', 'returns': 'string'},   
            'currencyINR': {'type': 'const', 'value': 'INR', 'returns': 'string'},   
            'currencyKRW': {'type': 'const', 'value': 'KRW', 'returns': 'string'},   
            'currencyMYR': {'type': 'const', 'value': 'MYR', 'returns': 'string'},   
            'currencyNOK': {'type': 'const', 'value': 'NOK', 'returns': 'string'},   
            'currencyNone': {'type': 'const', 'value': 'null', 'returns': 'string'},   
            'currencyNZD': {'type': 'const', 'value': 'NZD', 'returns': 'string'},   
            'currencyRUB': {'type': 'const', 'value': 'RUB', 'returns': 'string'},   
            'currencySEK': {'type': 'const', 'value': 'SEK', 'returns': 'string'},   
            'currencySGD': {'type': 'const', 'value': 'SGD', 'returns': 'string'},   
            'currencyTRY': {'type': 'const', 'value': 'TRY', 'returns': 'string'},   
            'currencyZAR': {'type': 'const', 'value': 'ZAR', 'returns': 'string'},   

            'labelStyleLabelCenter': {'type': 'const', 'value': 'label_style_label_center', 'returns': 'string'},   
            'labelStyleLabelLeft': {'type': 'const', 'value': 'label_style_label_left', 'returns': 'string'},   
            'labelStyleLabelLowerLeft': {'type': 'const', 'value': 'label_style_label_lower_left', 'returns': 'string'},   
            'labelStyleLabelLowerRight': {'type': 'const', 'value': 'label_style_label_lower_right', 'returns': 'string'},   
            'labelStyleLabelRight': {'type': 'const', 'value': 'label_style_label_right', 'returns': 'string'},   
            'labelStyleLabelUpperLeft': {'type': 'const', 'value': 'label_style_label_upper_left', 'returns': 'string'},   
            'labelStyleLabelUpperRight': {'type': 'const', 'value': 'label_style_label_upper_right', 'returns': 'string'},   
       
            // ta-lib new syntaxes
            'adLine': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'volume': {'type': 'series', 'required': true}}},
            'adOsc': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'volume': {'type': 'series', 'required': true}, 'fastperiod': {'type': 'integer', 'default': 3}, 'slowperiod': {'type': 'integer', 'default': 10}}},
            'adx': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'adxr': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'apo': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'fastperiod': {'type': 'integer', 'default': 12}, 'slowperiod': {'type': 'integer', 'default': 26}}},
            'aroon': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'aroonOsc': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'atr': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'avgPrice': {'type': 'indicator', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'bbands': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 20}, 'deviations': {'type': 'float', 'default': 2.0}}},
            'beta': {'type': 'indicator', 'params': {'series1': {'type': 'series', 'required': true}, 'series2': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 5}}},
            'bop': {'type': 'indicator', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'cci': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'cmo': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'correl': {'type': 'indicator', 'params': {'series1': {'type': 'series', 'required': true}, 'series2': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},
            'dema': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},
            'dx': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'ema': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},
            'htDcPeriod': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}}},
            'htDcPhase': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}}},
            'htPhasor': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}}},
            'htSine': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}}},
            'htTrendline': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}}},
            'htTrendMode': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}}},
            'kama': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},
            'linearReg': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'linearRegAngle': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'linearRegIntercept': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'linearRegSlope': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'ma': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}, 'matype': {'type': 'integer', 'default': 0}}},
            'macd': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'fastperiod': {'type': 'integer', 'default': 12}, 'slowperiod': {'type': 'integer', 'default': 26}, 'signalperiod': {'type': 'integer', 'default': 9}}},
            'macdExt': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'fastperiod': {'type': 'integer', 'default': 12}, 'fastmatype': {'type': 'integer', 'default': 0}, 'slowperiod': {'type': 'integer', 'default': 26}, 'slowmatype': {'type': 'integer', 'default': 0}, 'signalperiod': {'type': 'integer', 'default': 9}, 'signalmatype': {'type': 'integer', 'default': 0}}},
            'macdFix': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'signalperiod': {'type': 'integer', 'default': 9}}},
            'mama': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'fastlimit': {'type': 'float', 'default': 0.5}, 'slowlimit': {'type': 'float', 'default': 0.05}}},
            'maxIndex': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},
            'medPrice': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}}},
            'mfi': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'volume': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'midPoint': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'midPrice': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'minIndex': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},
            'minMax': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},
            'minMaxIndex': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},
            'minusDI': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'minusDM': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'mom': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 10}}},
            'natr': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'obv': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'volume': {'type': 'series', 'required': true}}},
            'plusDI': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'plusDM': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'ppo': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'fastperiod': {'type': 'integer', 'default': 12}, 'slowperiod': {'type': 'integer', 'default': 26}, 'matype': {'type': 'integer', 'default': 0}}},
            'roc': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 10}}},
            'rocp': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 10}}},
            'rocr': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 10}}},
            'rocr100': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 10}}},
            'rsi': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'sar': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'acceleration': {'type': 'float', 'default': 0.02}, 'maximum': {'type': 'float', 'default': 0.2}}},
            'sarExt': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'startvalue': {'type': 'float', 'default': 0}, 'offsetonreverse': {'type': 'float', 'default': 0}, 'accelerationinitlong': {'type': 'float', 'default': 0.02}, 'accelerationlong': {'type': 'float', 'default': 0.02}, 'accelerationmaxlong': {'type': 'float', 'default': 0.2}, 'accelerationinitshort': {'type': 'float', 'default': 0.02}, 'accelerationshort': {'type': 'float', 'default': 0.02}, 'accelerationmaxshort': {'type': 'float', 'default': 0.2}}},
            'sma': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},
            'stdDev': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 5}, 'nbdev': {'type': 'float', 'default': 1.0}}},
            'stoch': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'fastk_period': {'type': 'integer', 'default': 5}, 'slowk_period': {'type': 'integer', 'default': 3}, 'slowk_matype': {'type': 'integer', 'default': 0}, 'slowd_period': {'type': 'integer', 'default': 3}, 'slowd_matype': {'type': 'integer', 'default': 0}}},
            'stochF': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'fastk_period': {'type': 'integer', 'default': 5}, 'fastd_period': {'type': 'integer', 'default': 3}, 'fastd_matype': {'type': 'integer', 'default': 0}}},
            'stochRsi': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}, 'fastk_period': {'type': 'integer', 'default': 5}, 'fastd_period': {'type': 'integer', 'default': 3}, 'fastd_matype': {'type': 'integer', 'default': 0}}},
            'sum': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},
            't3': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 5}, 'vfactor': {'type': 'float', 'default': 0.7}}},
            'tema': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},
            'tRange': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'trima': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},
            'trix': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},
            'tsf': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'typPrice': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'ultOsc': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'period1': {'type': 'integer', 'default': 7}, 'period2': {'type': 'integer', 'default': 14}, 'period3': {'type': 'integer', 'default': 28}}},
            'variance': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 5}, 'nbdev': {'type': 'float', 'default': 1.0}}},
            'wclPrice': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'willr': {'type': 'indicator', 'params': {'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 14}}},
            'wma': {'type': 'indicator', 'params': {'source': {'type': 'series', 'required': true}, 'period': {'type': 'integer', 'default': 30}}},


            //pattern recognition
            'pattern2Crows': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'pattern3BlackCrows': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'pattern3Inside': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'pattern3LineStrike': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'pattern3StarsInSouth': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'pattern3WhiteSoldiers': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternAbandonedBaby': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'penetration': {'type': 'float', 'default': 0.3}}},
            'patternAdvanceBlock': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternBeltHold': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternBreakaway': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternClosingMarubozu': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternConcealBabySwallow': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternCounterattack': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternDarkCloud': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'penetration': {'type': 'float', 'default': 0.5}}},
            'patternDoji': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternDojiStar': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternDragonflyDoji': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternEngulfing': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternEveningDojiStar': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'penetration': {'type': 'float', 'default': 0.3}}},
            'patternEveningStar': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'penetration': {'type': 'float', 'default': 0.3}}},
            'patternGapSideSide': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternGravestoneDoji': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternHammer': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternHangingMan': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternHarami': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternHaramiCross': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternHighWave': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternHikkake': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternHikkakeMod': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternHomingPigeon': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternIdentical3Crows': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternInNeck': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternInvertedHammer': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternKicking': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternKickingByLength': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternLadderBottom': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternLongLeggedDoji': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternLongLine': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternMarubozu': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternMatchingLow': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternMatHold': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'penetration': {'type': 'float', 'default': 0.5}}},
            'patternMorningDojiStar': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'penetration': {'type': 'float', 'default': 0.3}}},
            'patternMorningStar': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}, 'penetration': {'type': 'float', 'default': 0.3}}},
            'patternOnNeck': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternPiercing': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternRickshawMan': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternRiseFall3Methods': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternSeparatingLines': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternShootingStar': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternShortLine': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternSpinningTop': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternStalledPattern': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternStickSandwich': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternTakuri': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternTasukiGap': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternThrusting': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternTristar': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternUnique3River': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternUpsideGap2Crows': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}},
            'patternXsideGap3Methods': {'type': 'pattern', 'params': {'open': {'type': 'series', 'required': true}, 'high': {'type': 'series', 'required': true}, 'low': {'type': 'series', 'required': true}, 'close': {'type': 'series', 'required': true}}}


       
       
        }
    }
}
monaco.languages.register({ id: 'devscript' });

monaco.languages.setMonarchTokensProvider('devscript', {
    defaultToken: '',
    tokenPostfix: '.ds',
    keywords: syntaxElements,
    operators: ['+', '-', '*', '/', '=', '>', '<', '>=', '<=', '==', '!=', 'and', 'or', 'not'],
    
    tokenizer: {
        root: [
            [/[a-zA-Z_]\w*/, { 
                cases: {
                    '@keywords': 'keyword',
                    '@operators': 'operator',
                    '@default': 'identifier'
                }
            }],
            [/[0-9]+(\.[0-9]+)?/, 'number'],
            [/[+\-*/=<>!]+/, 'operator'],
            [/".*?"/, 'string'],
            [/\/\/.*$/, 'comment'],
        ]
    }
});

monaco.languages.registerCompletionItemProvider('devscript', {
    provideCompletionItems: (model, position) => {
        const word = model.getWordUntilPosition(position);
        const range = {
            startLineNumber: position.lineNumber,
            endLineNumber: position.lineNumber,
            startColumn: word.startColumn,
            endColumn: word.endColumn
        };

        return {
            suggestions: syntaxElements.map(keyword => ({
                label: keyword,
                kind: monaco.languages.CompletionItemKind.Keyword,
                insertText: keyword,
                range: range
            }))
        };
    }
});
