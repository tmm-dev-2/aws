def _initialize_registries(self):
    return {
        'syntax_registry': {
            'type': 'syntax_evaluation',
            'elements': {
                # Market Data
                'open': {'type': 'price', 'category': 'market_data', 'default': 0.0},
                'high': {'type': 'price', 'category': 'market_data', 'default': 0.0},
                'low': {'type': 'price', 'category': 'market_data', 'default': 0.0},
                'close': {'type': 'price', 'category': 'market_data', 'default': 0.0},
                'volume': {'type': 'volume', 'category': 'market_data', 'default': 0},
                'hl2': {'type': 'calculation', 'category': 'market_data', 'formula': '(high + low) / 2'},
                'hlc3': {'type': 'calculation', 'category': 'market_data', 'formula': '(high + low + close) / 3'},
                'hlcc4': {'type': 'calculation', 'category': 'market_data', 'formula': '(high + low + close + close) / 4'},
                'ohlc4': {'type': 'calculation', 'category': 'market_data', 'formula': '(open + high + low + close) / 4'},

                # Technical Indicators (first part)
                'sma': {'type': 'indicator', 'category': 'moving_average', 'requires_args': True},
                'ema': {'type': 'indicator', 'category': 'moving_average', 'requires_args': True},
                'rsi': {'type': 'indicator', 'category': 'oscillator', 'requires_args': True},
                'taAccDist': {'type': 'indicator', 'category': 'volume', 'calculation': 'accumulation_distribution'},
                'taIII': {'type': 'indicator', 'category': 'volume', 'calculation': 'intraday_intensity'},
                'taNVI': {'type': 'indicator', 'category': 'volume', 'calculation': 'negative_volume_index'},
                'taOBV': {'type': 'indicator', 'category': 'volume', 'calculation': 'on_balance_volume'},
                'taPVI': {'type': 'indicator', 'category': 'volume', 'calculation': 'positive_volume_index'},
                'taPVT': {'type': 'indicator', 'category': 'volume', 'calculation': 'price_volume_trend'},
                'taTR': {'type': 'indicator', 'category': 'volatility', 'calculation': 'true_range'},
                'taVWAP': {'type': 'indicator', 'category': 'price', 'calculation': 'volume_weighted_average_price'},
                                # Technical Indicators (continued)
                'taWAD': {'type': 'indicator', 'category': 'volume', 'calculation': 'williams_accumulation_distribution'},
                'taWVAD': {'type': 'indicator', 'category': 'volume', 'calculation': 'weighted_volume_accumulation_distribution'},
                'taAlma': {'type': 'indicator', 'category': 'moving_average', 'calculation': 'arnaud_legoux_ma'},
                'taAtr': {'type': 'indicator', 'category': 'volatility', 'calculation': 'average_true_range'},
                'taBarsSince': {'type': 'indicator', 'category': 'bars', 'calculation': 'bars_since_condition'},
                'taBb': {'type': 'indicator', 'category': 'bands', 'calculation': 'bollinger_bands'},
                'taBbw': {'type': 'indicator', 'category': 'bands', 'calculation': 'bollinger_bandwidth'},
                'taCci': {'type': 'indicator', 'category': 'oscillator', 'calculation': 'commodity_channel_index'},
                'taChange': {'type': 'indicator', 'category': 'momentum', 'calculation': 'change'},
                'taCmo': {'type': 'indicator', 'category': 'oscillator', 'calculation': 'chande_momentum'},
                'taCog': {'type': 'indicator', 'category': 'momentum', 'calculation': 'center_of_gravity'},
                'taCorrelation': {'type': 'indicator', 'category': 'statistical', 'calculation': 'correlation'},
                'taCross': {'type': 'indicator', 'category': 'pattern', 'calculation': 'cross'},
                'taCrossover': {'type': 'indicator', 'category': 'pattern', 'calculation': 'crossover'},
                'taCrossunder': {'type': 'indicator', 'category': 'pattern', 'calculation': 'crossunder'},
                'taCum': {'type': 'indicator', 'category': 'cumulative', 'calculation': 'cumulative'},
                'taDev': {'type': 'indicator', 'category': 'statistical', 'calculation': 'deviation'},
                'taDmi': {'type': 'indicator', 'category': 'directional', 'calculation': 'directional_movement_index'},
                'taEma': {'type': 'indicator', 'category': 'moving_average', 'calculation': 'exponential_moving_average'},
                'taFalling': {'type': 'indicator', 'category': 'trend', 'calculation': 'falling'},
                'taHighest': {'type': 'indicator', 'category': 'extremes', 'calculation': 'highest'},
                'taHighestBars': {'type': 'indicator', 'category': 'bars', 'calculation': 'highest_bars'},
                'taHma': {'type': 'indicator', 'category': 'moving_average', 'calculation': 'hull_moving_average'},
                'taKc': {'type': 'indicator', 'category': 'bands', 'calculation': 'keltner_channels'},
                'taKcw': {'type': 'indicator', 'category': 'bands', 'calculation': 'keltner_channels_width'},
                                # Technical Indicators (continued)
                'taLinReg': {'type': 'indicator', 'category': 'regression', 'calculation': 'linear_regression'},
                'taLowest': {'type': 'indicator', 'category': 'extremes', 'calculation': 'lowest'},
                'taLowestBars': {'type': 'indicator', 'category': 'bars', 'calculation': 'lowest_bars'},
                'taMacd': {'type': 'indicator', 'category': 'momentum', 'calculation': 'moving_average_convergence_divergence'},
                'taMax': {'type': 'indicator', 'category': 'statistical', 'calculation': 'maximum'},
                'taMedian': {'type': 'indicator', 'category': 'statistical', 'calculation': 'median'},
                'taMfi': {'type': 'indicator', 'category': 'volume', 'calculation': 'money_flow_index'},
                'taMin': {'type': 'indicator', 'category': 'statistical', 'calculation': 'minimum'},
                'taMode': {'type': 'indicator', 'category': 'statistical', 'calculation': 'mode'},
                'taMom': {'type': 'indicator', 'category': 'momentum', 'calculation': 'momentum'},
                'taPercentile': {'type': 'indicator', 'category': 'statistical', 'calculation': 'percentile'},
                'taPercentRank': {'type': 'indicator', 'category': 'statistical', 'calculation': 'percent_rank'},
                'taPivotHigh': {'type': 'indicator', 'category': 'pivot', 'calculation': 'pivot_high'},
                'taPivotLow': {'type': 'indicator', 'category': 'pivot', 'calculation': 'pivot_low'},
                'taRange': {'type': 'indicator', 'category': 'volatility', 'calculation': 'range'},
                'taRising': {'type': 'indicator', 'category': 'trend', 'calculation': 'rising'},
                'taRma': {'type': 'indicator', 'category': 'moving_average', 'calculation': 'rolling_moving_average'},
                'taRoc': {'type': 'indicator', 'category': 'momentum', 'calculation': 'rate_of_change'},
                'taRsi': {'type': 'indicator', 'category': 'oscillator', 'calculation': 'relative_strength_index'},
                'taSar': {'type': 'indicator', 'category': 'trend', 'calculation': 'parabolic_sar'},
                'taSma': {'type': 'indicator', 'category': 'moving_average', 'calculation': 'simple_moving_average'},
                'taStdev': {'type': 'indicator', 'category': 'statistical', 'calculation': 'standard_deviation'},
                'taStoch': {'type': 'indicator', 'category': 'oscillator', 'calculation': 'stochastic'},
                'taSuperTrend': {'type': 'indicator', 'category': 'trend', 'calculation': 'supertrend'},
                'taSwma': {'type': 'indicator', 'category': 'moving_average', 'calculation': 'symmetrically_weighted_moving_average'},
                'taTsi': {'type': 'indicator', 'category': 'momentum', 'calculation': 'true_strength_index'},
                'taValueWhen': {'type': 'indicator', 'category': 'condition', 'calculation': 'value_when'},
                'taVariance': {'type': 'indicator', 'category': 'statistical', 'calculation': 'variance'},
                'taVwap': {'type': 'indicator', 'category': 'volume', 'calculation': 'volume_weighted_average_price'},
                'taVwma': {'type': 'indicator', 'category': 'moving_average', 'calculation': 'volume_weighted_moving_average'},
                'taWma': {'type': 'indicator', 'category': 'moving_average', 'calculation': 'weighted_moving_average'},
                'taWpr': {'type': 'indicator', 'category': 'oscillator', 'calculation': 'williams_percent_r'},

                                # Strategy Elements
                'strategyAccountCurrency': {'type': 'strategy', 'category': 'account', 'default': 'USD'},
                'strategyAvgLosingTrade': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyAvgLosingTradePercent': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyAvgTrade': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyAvgTradePercent': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyAvgWinningTrade': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyAvgWinningTradePercent': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyClosedTrades': {'type': 'strategy', 'category': 'trades', 'default': 0},
                'strategyClosedTradesFirstIndex': {'type': 'strategy', 'category': 'trades', 'default': 0},
                'strategyEquity': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyEvenTrades': {'type': 'strategy', 'category': 'trades', 'default': 0},
                'strategyGrossLoss': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyGrossLossPercent': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyGrossProfit': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyGrossProfitPercent': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyInitialCapital': {'type': 'strategy', 'category': 'account', 'default': 10000.0},
                'strategyLossTrades': {'type': 'strategy', 'category': 'trades', 'default': 0},
                'strategyMarginLiquidationPrice': {'type': 'strategy', 'category': 'risk', 'default': 0.0},
                'strategyMaxContractsHeldAll': {'type': 'strategy', 'category': 'position', 'default': 0},
                'strategyMaxContractsHeldLong': {'type': 'strategy', 'category': 'position', 'default': 0},
                'strategyMaxContractsHeldShort': {'type': 'strategy', 'category': 'position', 'default': 0},
                'strategyMaxDrawdown': {'type': 'strategy', 'category': 'risk', 'default': 0.0},
                'strategyMaxDrawdownPercent': {'type': 'strategy', 'category': 'risk', 'default': 0.0},
                'strategyMaxRunup': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyMaxRunupPercent': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyNetProfit': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyNetProfitPercent': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyOpenProfit': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyOpenProfitPercent': {'type': 'strategy', 'category': 'performance', 'default': 0.0},
                'strategyOpenTrades': {'type': 'strategy', 'category': 'trades', 'default': 0},
                'strategyOpenTradesCapitalHeld': {'type': 'strategy', 'category': 'position', 'default': 0.0},
                'strategyPositionAvgPrice': {'type': 'strategy', 'category': 'position', 'default': 0.0},
                'strategyPositionEntryName': {'type': 'strategy', 'category': 'position', 'default': ''},
                'strategyPositionSize': {'type': 'strategy', 'category': 'position', 'default': 0},
                'strategyWinTrades': {'type': 'strategy', 'category': 'trades', 'default': 0},
                'strategyEntryFunc': {'type': 'strategy', 'category': 'entry', 'operation': 'entry'},
                'strategyExitFunc': {'type': 'strategy', 'category': 'exit', 'operation': 'exit'},
                'strategyCloseFunc': {'type': 'strategy', 'category': 'position', 'operation': 'close'},
                'strategyCloseAllFunc': {'type': 'strategy', 'category': 'position', 'operation': 'close_all'},
                'strategyCancelFunc': {'type': 'strategy', 'category': 'order', 'operation': 'cancel'},
                'strategyCancelAllFunc': {'type': 'strategy', 'category': 'order', 'operation': 'cancel_all'},
                'strategyOrderFunc': {'type': 'strategy', 'category': 'order', 'operation': 'order'},
                'strategyRiskAllowEntryInFunc': {'type': 'strategy', 'category': 'risk', 'operation': 'allow_entry'},
                'strategyRiskMaxDrawdownFunc': {'type': 'strategy', 'category': 'risk', 'operation': 'max_drawdown'},
                  
                # Request Functions
                'requestSecurityFunc': {'type': 'request', 'category': 'data', 'operation': 'security'},
                'requestSeedFunc': {'type': 'request', 'category': 'data', 'operation': 'seed'},
                'requestDividendsFunc': {'type': 'request', 'category': 'data', 'operation': 'dividends'},
                'requestEarningsFunc': {'type': 'request', 'category': 'data', 'operation': 'earnings'},
                'requestFinancialFunc': {'type': 'request', 'category': 'data', 'operation': 'financial'},
                'requestQuandlFunc': {'type': 'request', 'category': 'data', 'operation': 'quandl'},
                'requestSplitsFunc': {'type': 'request', 'category': 'data', 'operation': 'splits'},
                'requestEconomicFunc': {'type': 'request', 'category': 'data', 'operation': 'economic'},

                # Input Operations
                'inputFunc': {'type': 'input', 'category': 'basic', 'operation': 'input'},
                'inputBoolFunc': {'type': 'input', 'category': 'boolean', 'operation': 'bool'},
                'inputIntFunc': {'type': 'input', 'category': 'integer', 'operation': 'int'},
                'inputFloatFunc': {'type': 'input', 'category': 'float', 'operation': 'float'},
                'inputStringFunc': {'type': 'input', 'category': 'string', 'operation': 'string'},
                'inputSourceFunc': {'type': 'input', 'category': 'source', 'operation': 'source'},
                'inputSymbolFunc': {'type': 'input', 'category': 'symbol', 'operation': 'symbol'},
                'inputTimeFunc': {'type': 'input', 'category': 'time', 'operation': 'time'},
                'inputSessionFunc': {'type': 'input', 'category': 'session', 'operation': 'session'},
                'inputPriceFunc': {'type': 'input', 'category': 'price', 'operation': 'price'},
                'inputTimeFrameFunc': {'type': 'input', 'category': 'timeframe', 'operation': 'timeframe'},

                # Logging Functions
                'logErrorFunc': {'type': 'log', 'category': 'error', 'operation': 'error'},
                'logInfoFunc': {'type': 'log', 'category': 'info', 'operation': 'info'},
                'logWarningFunc': {'type': 'log', 'category': 'warning', 'operation': 'warning'},

                # Additional Strategy Operations
                'strategyClosedTradesCommissionFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_commission'},
                'strategyClosedTradesEntryBarIndexFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_entry_bar_index'},
                'strategyClosedTradesEntryCommentFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_entry_comment'},
                'strategyClosedTradesEntryIdFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_entry_id'},
                'strategyClosedTradesEntryPriceFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_entry_price'},
                'strategyClosedTradesEntryTimeFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_entry_time'},
                'strategyClosedTradesExitBarIndexFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_exit_bar_index'},
                'strategyClosedTradesExitCommentFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_exit_comment'},
                'strategyClosedTradesExitIdFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_exit_id'},
                'strategyClosedTradesExitPriceFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_exit_price'},
                'strategyClosedTradesExitTimeFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_exit_time'},
                'strategyClosedTradesMaxDrawdownFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_max_drawdown'},
                'strategyClosedTradesMaxRunupFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_max_runup'},
                'strategyClosedTradesProfitFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_profit'},
                'strategyClosedTradesSizeFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'closed_trades_size'},

# Strategy Risk Management
                'strategyRiskMaxConsLossDaysFunc': {'type': 'strategy', 'category': 'risk', 'operation': 'max_consecutive_loss_days'},
                'strategyRiskMaxIntradayFilledOrdersFunc': {'type': 'strategy', 'category': 'risk', 'operation': 'max_intraday_filled_orders'},
                'strategyRiskMaxIntradayLossFunc': {'type': 'strategy', 'category': 'risk', 'operation': 'max_intraday_loss'},
                'strategyRiskMaxPositionSizeFunc': {'type': 'strategy', 'category': 'risk', 'operation': 'max_position_size'},

                # Data Type Operations
                'boolFunc': {'type': 'datatype', 'category': 'conversion', 'operation': 'to_bool'},
                'floatFunc': {'type': 'datatype', 'category': 'conversion', 'operation': 'to_float'},
                'intFunc': {'type': 'datatype', 'category': 'conversion', 'operation': 'to_int'},
                'naFunc': {'type': 'datatype', 'category': 'special', 'operation': 'na'},
                'nzFunc': {'type': 'datatype', 'category': 'special', 'operation': 'nz'},
                'fixNanFunc': {'type': 'datatype', 'category': 'special', 'operation': 'fix_nan'},

                # Color Operations
                'colFunc': {'type': 'color', 'category': 'creation', 'operation': 'new'},
                'colBFunc': {'type': 'color', 'category': 'component', 'operation': 'blue'},
                'colGFunc': {'type': 'color', 'category': 'component', 'operation': 'green'},
                'colRFunc': {'type': 'color', 'category': 'component', 'operation': 'red'},
                'colRgbFunc': {'type': 'color', 'category': 'creation', 'operation': 'from_rgb'},
                'colFromGradientFunc': {'type': 'color', 'category': 'creation', 'operation': 'from_gradient'},

                # Polyline Operations
                'polylineNewFunc': {'type': 'polyline', 'category': 'creation', 'operation': 'new'},
                'polylineDeleteFunc': {'type': 'polyline', 'category': 'utility', 'operation': 'delete'},
                'polylineSetPointsFunc': {'type': 'polyline', 'category': 'setter', 'operation': 'set_points'},
                'polylineGetPointsFunc': {'type': 'polyline', 'category': 'getter', 'operation': 'get_points'},
                'polylineSetStyleFunc': {'type': 'polyline', 'category': 'setter', 'operation': 'set_style'},
                'polylineSetColorFunc': {'type': 'polyline', 'category': 'setter', 'operation': 'set_color'},
                'polylineSetWidthFunc': {'type': 'polyline', 'category': 'setter', 'operation': 'set_width'},
                
                                # Table Operations
                'tableNewFunc': {'type': 'table', 'category': 'creation', 'operation': 'new'},
                'tableDeleteFunc': {'type': 'table', 'category': 'utility', 'operation': 'delete'},
                'tableSetCellFunc': {'type': 'table', 'category': 'setter', 'operation': 'set_cell'},
                'tableGetCellFunc': {'type': 'table', 'category': 'getter', 'operation': 'get_cell'},
                'tableSetBgColorFunc': {'type': 'table', 'category': 'setter', 'operation': 'set_bgcolor'},
                'tableSetBorderColorFunc': {'type': 'table', 'category': 'setter', 'operation': 'set_border_color'},
                'tableSetBorderWidthFunc': {'type': 'table', 'category': 'setter', 'operation': 'set_border_width'},
                'tableSetTextColorFunc': {'type': 'table', 'category': 'setter', 'operation': 'set_text_color'},
                'tableSetTextSizeFunc': {'type': 'table', 'category': 'setter', 'operation': 'set_text_size'},
                'tableSetHeaderFunc': {'type': 'table', 'category': 'setter', 'operation': 'set_header'},

                # Time and Date Functions
                'timeframeChangeFunc': {'type': 'time', 'category': 'timeframe', 'operation': 'change'},
                'timeframeFromSecondsFunc': {'type': 'time', 'category': 'timeframe', 'operation': 'from_seconds'},
                'timeframeInSecondsFunc': {'type': 'time', 'category': 'timeframe', 'operation': 'in_seconds'},
                'timestampFunc': {'type': 'time', 'category': 'timestamp', 'operation': 'timestamp'},
                'strFormatTimeFunc': {'type': 'time', 'category': 'formatting', 'operation': 'format_time'},


                # Strategy Performance Metrics
                'strategyOpenTradesMaxDrawdownPercentFunc': {'type': 'strategy', 'category': 'performance', 'operation': 'open_trades_max_drawdown_percent'},
                'strategyOpenTradesMaxRunupPercentFunc': {'type': 'strategy', 'category': 'performance', 'operation': 'open_trades_max_runup_percent'},
                'strategyOpenTradesProfitPercentFunc': {'type': 'strategy', 'category': 'performance', 'operation': 'open_trades_profit_percent'},
                'strategyClosedTradesMaxDrawdownPercentFunc': {'type': 'strategy', 'category': 'performance', 'operation': 'closed_trades_max_drawdown_percent'},
                'strategyClosedTradesMaxRunupPercentFunc': {'type': 'strategy', 'category': 'performance', 'operation': 'closed_trades_max_runup_percent'},
                'strategyClosedTradesProfitPercentFunc': {'type': 'strategy', 'category': 'performance', 'operation': 'closed_trades_profit_percent'},
                
                # Time Components
                'dayOfMonth': {'type': 'time', 'category': 'date', 'range': [1, 31]},
                'dayOfWeek': {'type': 'time', 'category': 'date', 'range': [0, 6]},
                'hour': {'type': 'time', 'category': 'time', 'range': [0, 23]},
                'minute': {'type': 'time', 'category': 'time', 'range': [0, 59]},
                'month': {'type': 'time', 'category': 'date', 'range': [1, 12]},
                'second': {'type': 'time', 'category': 'time', 'range': [0, 59]},
                'time': {'type': 'time', 'category': 'timestamp', 'default': 0},
                'timeClose': {'type': 'time', 'category': 'timestamp', 'default': 0},
                'timeTradingDay': {'type': 'time', 'category': 'timestamp', 'default': 0},
                'timeNow': {'type': 'time', 'category': 'timestamp', 'default': 0},
                'weekOfYear': {'type': 'time', 'category': 'date', 'range': [1, 53]},
                'year': {'type': 'time', 'category': 'date', 'range': [1900, 2100]},

                # Session States
                'sessionIsFirstBar': {'type': 'session', 'category': 'state', 'default': False},
                'sessionIsFirstBarRegular': {'type': 'session', 'category': 'state', 'default': False},
                'sessionIsLastBar': {'type': 'session', 'category': 'state', 'default': False},
                'sessionIsLastBarRegular': {'type': 'session', 'category': 'state', 'default': False},
                'sessionIsMarket': {'type': 'session', 'category': 'state', 'default': False},
                'sessionIsPostMarket': {'type': 'session', 'category': 'state', 'default': False},
                'sessionIsPreMarket': {'type': 'session', 'category': 'state', 'default': False},

                # Chart Elements
                'boxAll': {'type': 'chart', 'category': 'collection', 'items': 'box'},
                'chartBgCol': {'type': 'chart', 'category': 'color', 'default': 'white'},
                'chartFgCol': {'type': 'chart', 'category': 'color', 'default': 'black'},
                'chartIsHeikinAshi': {'type': 'chart', 'category': 'type', 'default': False},
                'chartIsKagi': {'type': 'chart', 'category': 'type', 'default': False},
                'chartIsLineBreak': {'type': 'chart', 'category': 'type', 'default': False},
                'chartIsPnf': {'type': 'chart', 'category': 'type', 'default': False},
                'chartIsRange': {'type': 'chart', 'category': 'type', 'default': False},
                'chartIsRenko': {'type': 'chart', 'category': 'type', 'default': False},
                'chartIsStandard': {'type': 'chart', 'category': 'type', 'default': True},
                'chartLeftVisibleBarTime': {'type': 'chart', 'category': 'time', 'default': 0},
                'chartRightVisibleBarTime': {'type': 'chart', 'category': 'time', 'default': 0},
                'labelAll': {'type': 'chart', 'category': 'collection', 'items': 'label'},
                'lineAll': {'type': 'chart', 'category': 'collection', 'items': 'line'},
                'lineFillAll': {'type': 'chart', 'category': 'collection', 'items': 'lineFill'},
                'polylineAll': {'type': 'chart', 'category': 'collection', 'items': 'polyline'},
                'tableAll': {'type': 'chart', 'category': 'collection', 'items': 'table'},

                                # Control Flow
                'andOp': {'type': 'control', 'category': 'logical', 'operation': 'and'},
                'enumType': {'type': 'control', 'category': 'type', 'operation': 'enum'},
                'exportFunc': {'type': 'control', 'category': 'module', 'operation': 'export'},
                'forLoop': {'type': 'control', 'category': 'loop', 'operation': 'for'},
                'forInLoop': {'type': 'control', 'category': 'loop', 'operation': 'forIn'},
                'ifCond': {'type': 'control', 'category': 'conditional', 'operation': 'if'},
                'importFunc': {'type': 'control', 'category': 'module', 'operation': 'import'},
                'methodFunc': {'type': 'control', 'category': 'function', 'operation': 'method'},
                'notOp': {'type': 'control', 'category': 'logical', 'operation': 'not'},
                'orOp': {'type': 'control', 'category': 'logical', 'operation': 'or'},
                'switchCase': {'type': 'control', 'category': 'conditional', 'operation': 'switch'},
                'typeDef': {'type': 'control', 'category': 'type', 'operation': 'typedef'},
                'whileLoop': {'type': 'control', 'category': 'loop', 'operation': 'while'},

                # Operators
                '=': {'type': 'operator', 'category': 'assignment'},
                '+': {'type': 'operator', 'category': 'arithmetic'},
                '-': {'type': 'operator', 'category': 'arithmetic'},
                '*': {'type': 'operator', 'category': 'arithmetic'},
                '/': {'type': 'operator', 'category': 'arithmetic'},
                '%': {'type': 'operator', 'category': 'arithmetic'},
                '==': {'type': 'operator', 'category': 'comparison'},
                '!=': {'type': 'operator', 'category': 'comparison'},
                '>': {'type': 'operator', 'category': 'comparison'},
                '<': {'type': 'operator', 'category': 'comparison'},
                '>=': {'type': 'operator', 'category': 'comparison'},
                '<=': {'type': 'operator', 'category': 'comparison'},

                # Styles and Display
                'showStyleArea': {'type': 'style', 'category': 'plot', 'style': 'area'},
                'showStyleAreaBr': {'type': 'style', 'category': 'plot', 'style': 'area_br'},
                'showStyleCircles': {'type': 'style', 'category': 'plot', 'style': 'circles'},
                'showStyleColumns': {'type': 'style', 'category': 'plot', 'style': 'columns'},
                'showStyleCross': {'type': 'style', 'category': 'plot', 'style': 'cross'},
                'showStyleHistogram': {'type': 'style', 'category': 'plot', 'style': 'histogram'},
                'showStyleLine': {'type': 'style', 'category': 'plot', 'style': 'line'},
                'showStyleLineBr': {'type': 'style', 'category': 'plot', 'style': 'line_br'},

                                # Positions
                'positionBottomCenter': {'type': 'position', 'category': 'alignment', 'value': 'bottom_center'},
                'positionBottomLeft': {'type': 'position', 'category': 'alignment', 'value': 'bottom_left'},
                'positionBottomRight': {'type': 'position', 'category': 'alignment', 'value': 'bottom_right'},
                'positionMiddleCenter': {'type': 'position', 'category': 'alignment', 'value': 'middle_center'},
                'positionMiddleLeft': {'type': 'position', 'category': 'alignment', 'value': 'middle_left'},
                'positionMiddleRight': {'type': 'position', 'category': 'alignment', 'value': 'middle_right'},
                'positionTopCenter': {'type': 'position', 'category': 'alignment', 'value': 'top_center'},
                'positionTopLeft': {'type': 'position', 'category': 'alignment', 'value': 'top_left'},
                'positionTopRight': {'type': 'position', 'category': 'alignment', 'value': 'top_right'},

                 # Bar State Functions
                'barMergeGapsOff': {'type': 'bar', 'category': 'merge', 'operation': 'gaps_off'},
                'barMergeGapsOn': {'type': 'bar', 'category': 'merge', 'operation': 'gaps_on'},
                'barMergeLookaheadOff': {'type': 'bar', 'category': 'merge', 'operation': 'lookahead_off'},
                'barMergeLookaheadOn': {'type': 'bar', 'category': 'merge', 'operation': 'lookahead_on'},
                'maxBarsBackFunc': {'type': 'bar', 'category': 'history', 'operation': 'max_bars_back'},

                # Strategy Order Management
                'strategyDefaultEntryQtyFunc': {'type': 'strategy', 'category': 'order', 'operation': 'default_entry_qty'},
                'strategyConvertToAccountFunc': {'type': 'strategy', 'category': 'conversion', 'operation': 'convert_to_account'},
                'strategyConvertToSymbolFunc': {'type': 'strategy', 'category': 'conversion', 'operation': 'convert_to_symbol'},
                'strategyOpenTradesCommissionFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'open_trades_commission'},
                'strategyOpenTradesEntryBarIndexFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'open_trades_entry_bar_index'},
                'strategyOpenTradesEntryCommentFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'open_trades_entry_comment'},
                'strategyOpenTradesEntryIdFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'open_trades_entry_id'},
                'strategyOpenTradesEntryPriceFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'open_trades_entry_price'},
                'strategyOpenTradesEntryTimeFunc': {'type': 'strategy', 'category': 'trades', 'operation': 'open_trades_entry_time'},

                                # Strategy Settings
                'strategyCash': {'type': 'strategy', 'category': 'settings', 'operation': 'cash'},
                'strategyCommissionCashPerContract': {'type': 'strategy', 'category': 'settings', 'operation': 'commission_cash_per_contract'},
                'strategyCommissionCashPerOrder': {'type': 'strategy', 'category': 'settings', 'operation': 'commission_cash_per_order'},
                'strategyCommissionPercent': {'type': 'strategy', 'category': 'settings', 'operation': 'commission_percent'},
                'strategyDirectionAll': {'type': 'strategy', 'category': 'direction', 'operation': 'all'},
                'strategyDirectionLong': {'type': 'strategy', 'category': 'direction', 'operation': 'long'},
                'strategyDirectionShort': {'type': 'strategy', 'category': 'direction', 'operation': 'short'},
                'strategyFixed': {'type': 'strategy', 'category': 'position', 'operation': 'fixed'},
                'strategyLong': {'type': 'strategy', 'category': 'position', 'operation': 'long'},
                'strategyShort': {'type': 'strategy', 'category': 'position', 'operation': 'short'},

                # Adjustment Constants
                'backAdjustmentInherit': {'type': 'adjustment', 'category': 'back', 'operation': 'inherit'},
                'backAdjustmentOff': {'type': 'adjustment', 'category': 'back', 'operation': 'off'},
                'backAdjustmentOn': {'type': 'adjustment', 'category': 'back', 'operation': 'on'},
                'settlementAsCloseInherit': {'type': 'adjustment', 'category': 'settlement', 'operation': 'inherit'},
                'settlementAsCloseOff': {'type': 'adjustment', 'category': 'settlement', 'operation': 'off'},
                'settlementAsCloseOn': {'type': 'adjustment', 'category': 'settlement', 'operation': 'on'},

                                # Format Settings
                'formatInherit': {'type': 'format', 'category': 'inheritance', 'operation': 'inherit'},
                'formatMinTick': {'type': 'format', 'category': 'price', 'operation': 'min_tick'},
                'formatPercent': {'type': 'format', 'category': 'number', 'operation': 'percent'},
                'formatPrice': {'type': 'format', 'category': 'price', 'operation': 'price'},
                'formatVolume': {'type': 'format', 'category': 'volume', 'operation': 'volume'},

                # Earnings and Dividends
                'earningsActual': {'type': 'earnings', 'category': 'report', 'operation': 'actual'},
                'earningsEstimate': {'type': 'earnings', 'category': 'report', 'operation': 'estimate'},
                'earningsStandardized': {'type': 'earnings', 'category': 'report', 'operation': 'standardized'},
                'dividendsGross': {'type': 'dividends', 'category': 'payment', 'operation': 'gross'},
                'dividendsNet': {'type': 'dividends', 'category': 'payment', 'operation': 'net'},
                'dividendsFutureAmount': {'type': 'dividends', 'category': 'future', 'operation': 'amount'},
                'dividendsFutureExDate': {'type': 'dividends', 'category': 'future', 'operation': 'ex_date'},
                'dividendsFuturePayDate': {'type': 'dividends', 'category': 'future', 'operation': 'pay_date'},

                                # Order Management
                'strategyOcaCancel': {'type': 'order', 'category': 'oca', 'operation': 'cancel'},
                'strategyOcaNone': {'type': 'order', 'category': 'oca', 'operation': 'none'},
                'strategyOcaReduce': {'type': 'order', 'category': 'oca', 'operation': 'reduce'},
                'strategyPercentOfEquity': {'type': 'order', 'category': 'sizing', 'operation': 'percent_of_equity'},

                # Session Types
                'sessionExtended': {'type': 'session', 'category': 'type', 'operation': 'extended'},
                'sessionRegular': {'type': 'session', 'category': 'type', 'operation': 'regular'},
                'sessionIsPreMarket': {'type': 'session', 'category': 'check', 'operation': 'is_pre_market'},
                'sessionIsPostMarket': {'type': 'session', 'category': 'check', 'operation': 'is_post_market'},
                'sessionIsMarket': {'type': 'session', 'category': 'check', 'operation': 'is_market'},

                # Day of Week Constants
                'dayOfWeekSunday': {'type': 'time', 'category': 'day', 'value': 0},
                'dayOfWeekMonday': {'type': 'time', 'category': 'day', 'value': 1},
                'dayOfWeekTuesday': {'type': 'time', 'category': 'day', 'value': 2},
                'dayOfWeekWednesday': {'type': 'time', 'category': 'day', 'value': 3},
                'dayOfWeekThursday': {'type': 'time', 'category': 'day', 'value': 4},
                'dayOfWeekFriday': {'type': 'time', 'category': 'day', 'value': 5},
                'dayOfWeekSaturday': {'type': 'time', 'category': 'day', 'value': 6},

                                # Location Types
                'locationAboveBar': {'type': 'location', 'category': 'vertical', 'value': 'above_bar'},
                'locationAbsolute': {'type': 'location', 'category': 'positioning', 'value': 'absolute'},
                'locationBelowBar': {'type': 'location', 'category': 'vertical', 'value': 'below_bar'},
                'locationBottom': {'type': 'location', 'category': 'vertical', 'value': 'bottom'},
                'locationTop': {'type': 'location', 'category': 'vertical', 'value': 'top'},

                # Scale Types
                'scaleLeft': {'type': 'scale', 'category': 'position', 'value': 'left'},
                'scaleNone': {'type': 'scale', 'category': 'visibility', 'value': 'none'},
                'scaleRight': {'type': 'scale', 'category': 'position', 'value': 'right'},

                # Boolean Values
                'trueValue': {'type': 'boolean', 'category': 'constant', 'value': True},
                'falseValue': {'type': 'boolean', 'category': 'constant', 'value': False},


                # Shapes
                'shapeArrowDown': {'type': 'shape', 'category': 'arrow', 'value': 'arrow_down'},
                'shapeArrowUp': {'type': 'shape', 'category': 'arrow', 'value': 'arrow_up'},
                'shapeCircle': {'type': 'shape', 'category': 'basic', 'value': 'circle'},
                'shapeCross': {'type': 'shape', 'category': 'basic', 'value': 'cross'},
                'shapeDiamond': {'type': 'shape', 'category': 'basic', 'value': 'diamond'},
                'shapeFlag': {'type': 'shape', 'category': 'basic', 'value': 'flag'},
                'shapeLabelDown': {'type': 'shape', 'category': 'label', 'value': 'label_down'},
                'shapeLabelUp': {'type': 'shape', 'category': 'label', 'value': 'label_up'},
                'shapeSquare': {'type': 'shape', 'category': 'basic', 'value': 'square'},
                'shapeTriangleDown': {'type': 'shape', 'category': 'basic', 'value': 'triangle_down'},
                'shapeTriangleUp': {'type': 'shape', 'category': 'basic', 'value': 'triangle_up'},
                'shapeXCross': {'type': 'shape', 'category': 'basic', 'value': 'xcross'},

                # Sizes
                'sizeAuto': {'type': 'size', 'category': 'auto', 'value': 'auto'},
                'sizeHuge': {'type': 'size', 'category': 'fixed', 'value': 'huge'},
                'sizeLarge': {'type': 'size', 'category': 'fixed', 'value': 'large'},
                'sizeNormal': {'type': 'size', 'category': 'fixed', 'value': 'normal'},
                'sizeSmall': {'type': 'size', 'category': 'fixed', 'value': 'small'},
                'sizeTiny': {'type': 'size', 'category': 'fixed', 'value': 'tiny'},

                                # Colors
                'colAqua': {'type': 'color', 'category': 'basic', 'value': '#00FFFF'},
                'colBlack': {'type': 'color', 'category': 'basic', 'value': '#000000'},
                'colBlue': {'type': 'color', 'category': 'basic', 'value': '#0000FF'},
                'colFuchsia': {'type': 'color', 'category': 'basic', 'value': '#FF00FF'},
                'colGray': {'type': 'color', 'category': 'basic', 'value': '#808080'},
                'colGreen': {'type': 'color', 'category': 'basic', 'value': '#008000'},
                'colLime': {'type': 'color', 'category': 'basic', 'value': '#00FF00'},
                'colMaroon': {'type': 'color', 'category': 'basic', 'value': '#800000'},
                'colNavy': {'type': 'color', 'category': 'basic', 'value': '#000080'},
                'colOlive': {'type': 'color', 'category': 'basic', 'value': '#808000'},
                'colOrange': {'type': 'color', 'category': 'basic', 'value': '#FFA500'},
                'colPurple': {'type': 'color', 'category': 'basic', 'value': '#800080'},
                'colRed': {'type': 'color', 'category': 'basic', 'value': '#FF0000'},
                'colSilver': {'type': 'color', 'category': 'basic', 'value': '#C0C0C0'},
                'colTeal': {'type': 'color', 'category': 'basic', 'value': '#008080'},
                'colWhite': {'type': 'color', 'category': 'basic', 'value': '#FFFFFF'},
                'colYellow': {'type': 'color', 'category': 'basic', 'value': '#FFFF00'},

                # Currencies
                'currencyAUD': {'type': 'currency', 'category': 'fiat', 'value': 'AUD'},
                'currencyBTC': {'type': 'currency', 'category': 'crypto', 'value': 'BTC'},
                'currencyCAD': {'type': 'currency', 'category': 'fiat', 'value': 'CAD'},
                'currencyCHF': {'type': 'currency', 'category': 'fiat', 'value': 'CHF'},
                'currencyETH': {'type': 'currency', 'category': 'crypto', 'value': 'ETH'},
                'currencyEUR': {'type': 'currency', 'category': 'fiat', 'value': 'EUR'},
                'currencyGBP': {'type': 'currency', 'category': 'fiat', 'value': 'GBP'},
                'currencyJPY': {'type': 'currency', 'category': 'fiat', 'value': 'JPY'},
                'currencyUSD': {'type': 'currency', 'category': 'fiat', 'value': 'USD'},
                'currencyUSDT': {'type': 'currency', 'category': 'crypto', 'value': 'USDT'},

                # Display Settings
                'displayAll': {'type': 'display', 'category': 'visibility', 'value': 'all'},
                'displayDataWindow': {'type': 'display', 'category': 'visibility', 'value': 'data_window'},
                'displayNone': {'type': 'display', 'category': 'visibility', 'value': 'none'},
                'displayPane': {'type': 'display', 'category': 'visibility', 'value': 'pane'},
                'displayPriceScale': {'type': 'display', 'category': 'visibility', 'value': 'price_scale'},
                'displayStatusLine': {'type': 'display', 'category': 'visibility', 'value': 'status_line'},

                                # Line Styles
                'lineStyleArrowBoth': {'type': 'line_style', 'category': 'arrow', 'value': 'arrow_both'},
                'lineStyleArrowLeft': {'type': 'line_style', 'category': 'arrow', 'value': 'arrow_left'},
                'lineStyleArrowRight': {'type': 'line_style', 'category': 'arrow', 'value': 'arrow_right'},
                'lineStyleDashed': {'type': 'line_style', 'category': 'pattern', 'value': 'dashed'},
                'lineStyleDotted': {'type': 'line_style', 'category': 'pattern', 'value': 'dotted'},
                'lineStyleSolid': {'type': 'line_style', 'category': 'pattern', 'value': 'solid'},
                'hlineStyleDashed': {'type': 'hline_style', 'category': 'pattern', 'value': 'dashed'},
                'hlineStyleDotted': {'type': 'hline_style', 'category': 'pattern', 'value': 'dotted'},
                'hlineStyleSolid': {'type': 'hline_style', 'category': 'pattern', 'value': 'solid'},

                # Label Styles
                'labelStyleArrowDown': {'type': 'label_style', 'category': 'arrow', 'value': 'arrow_down'},
                'labelStyleArrowUp': {'type': 'label_style', 'category': 'arrow', 'value': 'arrow_up'},
                'labelStyleCircle': {'type': 'label_style', 'category': 'shape', 'value': 'circle'},
                'labelStyleCross': {'type': 'label_style', 'category': 'shape', 'value': 'cross'},
                'labelStyleDiamond': {'type': 'label_style', 'category': 'shape', 'value': 'diamond'},
                'labelStyleFlag': {'type': 'label_style', 'category': 'shape', 'value': 'flag'},
                'labelStyleLabelCenter': {'type': 'label_style', 'category': 'position', 'value': 'label_center'},
                'labelStyleLabelDown': {'type': 'label_style', 'category': 'position', 'value': 'label_down'},
                'labelStyleLabelLeft': {'type': 'label_style', 'category': 'position', 'value': 'label_left'},
                'labelStyleLabelRight': {'type': 'label_style', 'category': 'position', 'value': 'label_right'},
                'labelStyleLabelUp': {'type': 'label_style', 'category': 'position', 'value': 'label_up'},
                'labelStyleNone': {'type': 'label_style', 'category': 'visibility', 'value': 'none'},
                'labelStyleSquare': {'type': 'label_style', 'category': 'shape', 'value': 'square'},
                'labelStyleTriangleDown': {'type': 'label_style', 'category': 'shape', 'value': 'triangle_down'},
                'labelStyleTriangleUp': {'type': 'label_style', 'category': 'shape', 'value': 'triangle_up'},
                'labelStyleXCross': {'type': 'label_style', 'category': 'shape', 'value': 'xcross'},
                'labelCopyFunc': {'type': 'label', 'category': 'utility', 'operation': 'copy'},
                'labelDeleteFunc': {'type': 'label', 'category': 'utility', 'operation': 'delete'},
                'labelGetTextFunc': {'type': 'label', 'category': 'getter', 'operation': 'get_text'},
                'labelGetXFunc': {'type': 'label', 'category': 'getter', 'operation': 'get_x'},
                'labelGetYFunc': {'type': 'label', 'category': 'getter', 'operation': 'get_y'},
                'labelNewFunc': {'type': 'label', 'category': 'creation', 'operation': 'new'},
                'labelSetColFunc': {'type': 'label', 'category': 'setter', 'operation': 'set_color'},
                'labelSetPointFunc': {'type': 'label', 'category': 'setter', 'operation': 'set_point'},
                'labelSetSizeFunc': {'type': 'label', 'category': 'setter', 'operation': 'set_size'},
                'labelSetStyleFunc': {'type': 'label', 'category': 'setter', 'operation': 'set_style'},
                'labelSetTextFunc': {'type': 'label', 'category': 'setter', 'operation': 'set_text'},
                'labelSetTextColFunc': {'type': 'label', 'category': 'setter', 'operation': 'set_text_color'},
                'labelSetToolTipFunc': {'type': 'label', 'category': 'setter', 'operation': 'set_tooltip'},
                'labelSetXFunc': {'type': 'label', 'category': 'setter', 'operation': 'set_x'},
                'labelSetYFunc': {'type': 'label', 'category': 'setter', 'operation': 'set_y'},

                # Mathematical Constants
                'mathE': {'type': 'constant', 'category': 'mathematical', 'value': 2.718281828459045},
                'mathPi': {'type': 'constant', 'category': 'mathematical', 'value': 3.141592653589793},
                'mathPhi': {'type': 'constant', 'category': 'mathematical', 'value': 1.618033988749895},
                'mathRPhi': {'type': 'constant', 'category': 'mathematical', 'value': 0.618033988749895},

                                # Function Definitions
                'alertFunc': {'type': 'function', 'category': 'notification', 'requires_args': True},
                'alertConditionFunc': {'type': 'function', 'category': 'notification', 'requires_args': True},
                'arrAbs': {'type': 'function', 'category': 'array', 'operation': 'absolute'},
                'arrAvg': {'type': 'function', 'category': 'array', 'operation': 'average'},
                'arrBinarySearch': {'type': 'function', 'category': 'array', 'operation': 'search'},
                'arrClear': {'type': 'function', 'category': 'array', 'operation': 'clear'},
                'arrConcat': {'type': 'function', 'category': 'array', 'operation': 'concatenate'},
                'arrCopy': {'type': 'function', 'category': 'array', 'operation': 'copy'},
                'arrCovariance': {'type': 'function', 'category': 'array', 'operation': 'covariance'},
                'arrEvery': {'type': 'function', 'category': 'array', 'operation': 'every'},
                'arrFill': {'type': 'function', 'category': 'array', 'operation': 'fill'},
                'arrFirst': {'type': 'function', 'category': 'array', 'operation': 'first'},
                'arrFrom': {'type': 'function', 'category': 'array', 'operation': 'from'},
                'arrGet': {'type': 'function', 'category': 'array', 'operation': 'get'},
                'arrIncludes': {'type': 'function', 'category': 'array', 'operation': 'includes'},
                'arrIndexOf': {'type': 'function', 'category': 'array', 'operation': 'indexof'},
                'arrInsert': {'type': 'function', 'category': 'array', 'operation': 'insert'},
                'arrJoin': {'type': 'function', 'category': 'array', 'operation': 'join'},
                'arrLast': {'type': 'function', 'category': 'array', 'operation': 'last'},
                'arrLastIndexOf': {'type': 'function', 'category': 'array', 'operation': 'lastindexof'},
                'arrMax': {'type': 'function', 'category': 'array', 'operation': 'maximum'},
                'arrMedian': {'type': 'function', 'category': 'array', 'operation': 'median'},
                'arrMin': {'type': 'function', 'category': 'array', 'operation': 'minimum'},
                'arrMode': {'type': 'function', 'category': 'array', 'operation': 'mode'},
                'arrNewBool': {'type': 'array', 'category': 'creation', 'operation': 'new_boolean'},
                'arrNewBox': {'type': 'array', 'category': 'creation', 'operation': 'new_box'},
                'arrNewFloat': {'type': 'array', 'category': 'creation', 'operation': 'new_float'},
                'arrNewInt': {'type': 'array', 'category': 'creation', 'operation': 'new_integer'},
                'arrNewLabel': {'type': 'array', 'category': 'creation', 'operation': 'new_label'},
                'arrNewLine': {'type': 'array', 'category': 'creation', 'operation': 'new_line'},
                'arrNewString': {'type': 'array', 'category': 'creation', 'operation': 'new_string'},
                'arrNewTable': {'type': 'array', 'category': 'creation', 'operation': 'new_table'},
                'arrStandardize': {'type': 'array', 'category': 'statistics', 'operation': 'standardize'},
                'arrStdev': {'type': 'array', 'category': 'statistics', 'operation': 'standard_deviation'},
                'arrVariance': {'type': 'array', 'category': 'statistics', 'operation': 'variance'},

                                # Matrix Operations
                'matrixAddCol': {'type': 'matrix', 'category': 'modification', 'operation': 'add_column'},
                'matrixAddRow': {'type': 'matrix', 'category': 'modification', 'operation': 'add_row'},
                'matrixAvg': {'type': 'matrix', 'category': 'calculation', 'operation': 'average'},
                'matrixCol': {'type': 'matrix', 'category': 'access', 'operation': 'get_column'},
                'matrixColumns': {'type': 'matrix', 'category': 'property', 'operation': 'column_count'},
                'matrixConcat': {'type': 'matrix', 'category': 'modification', 'operation': 'concatenate'},
                'matrixCopy': {'type': 'matrix', 'category': 'utility', 'operation': 'copy'},
                'matrixDet': {'type': 'matrix', 'category': 'calculation', 'operation': 'determinant'},
                'matrixDiff': {'type': 'matrix', 'category': 'calculation', 'operation': 'difference'},
                'matrixEigenValues': {'type': 'matrix', 'category': 'calculation', 'operation': 'eigen_values'},
                'matrixEigenVectors': {'type': 'matrix', 'category': 'calculation', 'operation': 'eigen_vectors'},
                'matrixElementsCount': {'type': 'matrix', 'category': 'property', 'operation': 'element_count'},
                'matrixFill': {'type': 'matrix', 'category': 'modification', 'operation': 'fill'},
                'matrixGet': {'type': 'matrix', 'category': 'access', 'operation': 'get_element'},
                'matrixInv': {'type': 'matrix', 'category': 'calculation', 'operation': 'inverse'},
                'matrixIsAntiDiagonal': {'type': 'matrix', 'category': 'check', 'operation': 'is_anti_diagonal'},
                'matrixIsAntiSymmetric': {'type': 'matrix', 'category': 'check', 'operation': 'is_anti_symmetric'},
                'matrixIsBinary': {'type': 'matrix', 'category': 'check', 'operation': 'is_binary'},
                'matrixIsDiagonal': {'type': 'matrix', 'category': 'check', 'operation': 'is_diagonal'},
                'matrixIsIdentity': {'type': 'matrix', 'category': 'check', 'operation': 'is_identity'},
                'matrixIsSquare': {'type': 'matrix', 'category': 'check', 'operation': 'is_square'},
                'matrixIsStochastic': {'type': 'matrix', 'category': 'check', 'operation': 'is_stochastic'},
                'matrixIsSymmetric': {'type': 'matrix', 'category': 'check', 'operation': 'is_symmetric'},
                'matrixIsTriangular': {'type': 'matrix', 'category': 'check', 'operation': 'is_triangular'},
                'matrixIsZero': {'type': 'matrix', 'category': 'check', 'operation': 'is_zero'},
                'matrixKron': {'type': 'matrix', 'category': 'operation', 'operation': 'kronecker_product'},
                'matrixPinv': {'type': 'matrix', 'category': 'operation', 'operation': 'pseudoinverse'},
                'matrixPow': {'type': 'matrix', 'category': 'operation', 'operation': 'power'},
                'matrixRank': {'type': 'matrix', 'category': 'property', 'operation': 'rank'},
                'matrixReshape': {'type': 'matrix', 'category': 'modification', 'operation': 'reshape'},
                'matrixTrace': {'type': 'matrix', 'category': 'property', 'operation': 'trace'},
                'matrixTranspose': {'type': 'matrix', 'category': 'operation', 'operation': 'transpose'},

                 # Box Operations
                'boxCopyFunc': {'type': 'box', 'category': 'utility', 'operation': 'copy'},
                'boxDeleteFunc': {'type': 'box', 'category': 'utility', 'operation': 'delete'},
                'boxGetBottomFunc': {'type': 'box', 'category': 'getter', 'operation': 'get_bottom'},
                'boxGetLeftFunc': {'type': 'box', 'category': 'getter', 'operation': 'get_left'},
                'boxGetRightFunc': {'type': 'box', 'category': 'getter', 'operation': 'get_right'},
                'boxGetTopFunc': {'type': 'box', 'category': 'getter', 'operation': 'get_top'},
                'boxNewFunc': {'type': 'box', 'category': 'creation', 'operation': 'new'},
                'boxSetBgColFunc': {'type': 'box', 'category': 'setter', 'operation': 'set_background_color'},
                'boxSetBorderColFunc': {'type': 'box', 'category': 'setter', 'operation': 'set_border_color'},
                'boxSetBorderStyleFunc': {'type': 'box', 'category': 'setter', 'operation': 'set_border_style'},
                'boxSetBorderWidthFunc': {'type': 'box', 'category': 'setter', 'operation': 'set_border_width'},
                'boxSetBottomFunc': {'type': 'box', 'category': 'setter', 'operation': 'set_bottom'},
                'boxSetLeftFunc': {'type': 'box', 'category': 'setter', 'operation': 'set_left'},
                'boxSetRightFunc': {'type': 'box', 'category': 'setter', 'operation': 'set_right'},
                'boxSetTopFunc': {'type': 'box', 'category': 'setter', 'operation': 'set_top'},
                'boxSetTextFunc': {'type': 'box', 'category': 'setter', 'operation': 'set_text'},
                'boxSetTextColFunc': {'type': 'box', 'category': 'setter', 'operation': 'set_text_color'},
                'boxSetTextSizeFunc': {'type': 'box', 'category': 'setter', 'operation': 'set_text_size'},


                # Mathematical Functions
                'mathAbs': {'type': 'math', 'category': 'basic', 'operation': 'absolute'},
                'mathAcos': {'type': 'math', 'category': 'trigonometry', 'operation': 'arccos'},
                'mathAsin': {'type': 'math', 'category': 'trigonometry', 'operation': 'arcsin'},
                'mathAtan': {'type': 'math', 'category': 'trigonometry', 'operation': 'arctan'},
                'mathCeil': {'type': 'math', 'category': 'rounding', 'operation': 'ceiling'},
                'mathCos': {'type': 'math', 'category': 'trigonometry', 'operation': 'cosine'},
                'mathExp': {'type': 'math', 'category': 'exponential', 'operation': 'exp'},
                'mathFloor': {'type': 'math', 'category': 'rounding', 'operation': 'floor'},
                'mathLog': {'type': 'math', 'category': 'logarithm', 'operation': 'natural_log'},
                'mathLog10': {'type': 'math', 'category': 'logarithm', 'operation': 'log10'},
                'mathMax': {'type': 'math', 'category': 'comparison', 'operation': 'maximum'},
                'mathMin': {'type': 'math', 'category': 'comparison', 'operation': 'minimum'},
                'mathPow': {'type': 'math', 'category': 'exponential', 'operation': 'power'},
                'mathRandom': {'type': 'math', 'category': 'random', 'operation': 'random'},
                'mathRound': {'type': 'math', 'category': 'rounding', 'operation': 'round'},
                'mathSign': {'type': 'math', 'category': 'basic', 'operation': 'sign'},
                'mathSin': {'type': 'math', 'category': 'trigonometry', 'operation': 'sine'},
                'mathSqrt': {'type': 'math', 'category': 'basic', 'operation': 'square_root'},
                'mathSum': {'type': 'math', 'category': 'basic', 'operation': 'sum'},
                'mathTan': {'type': 'math', 'category': 'trigonometry', 'operation': 'tangent'},
                'mathToDegrees': {'type': 'math', 'category': 'conversion', 'operation': 'to_degrees'},
                'mathToRadians': {'type': 'math', 'category': 'conversion', 'operation': 'to_radians'},

                 # Map Operations
                'mapClearFunc': {'type': 'map', 'category': 'modification', 'operation': 'clear'},
                'mapContainsFunc': {'type': 'map', 'category': 'check', 'operation': 'contains'},
                'mapCopyFunc': {'type': 'map', 'category': 'utility', 'operation': 'copy'},
                'mapGetFunc': {'type': 'map', 'category': 'access', 'operation': 'get'},
                'mapKeysFunc': {'type': 'map', 'category': 'access', 'operation': 'keys'},
                'mapNewTypeFunc': {'type': 'map', 'category': 'creation', 'operation': 'new'},
                'mapPutFunc': {'type': 'map', 'category': 'modification', 'operation': 'put'},
                'mapPutAllFunc': {'type': 'map', 'category': 'modification', 'operation': 'put_all'},
                'mapRemoveFunc': {'type': 'map', 'category': 'modification', 'operation': 'remove'},
                'mapSizeFunc': {'type': 'map', 'category': 'property', 'operation': 'size'},
                'mapValuesFunc': {'type': 'map', 'category': 'access', 'operation': 'values'},

                # Line Operations
                'lineCopyFunc': {'type': 'line', 'category': 'utility', 'operation': 'copy'},
                'lineDeleteFunc': {'type': 'line', 'category': 'utility', 'operation': 'delete'},
                'lineGetPriceFunc': {'type': 'line', 'category': 'getter', 'operation': 'get_price'},
                'lineGetX1Func': {'type': 'line', 'category': 'getter', 'operation': 'get_x1'},
                'lineGetX2Func': {'type': 'line', 'category': 'getter', 'operation': 'get_x2'},
                'lineGetY1Func': {'type': 'line', 'category': 'getter', 'operation': 'get_y1'},
                'lineGetY2Func': {'type': 'line', 'category': 'getter', 'operation': 'get_y2'},
                'lineNewFunc': {'type': 'line', 'category': 'creation', 'operation': 'new'},
                'lineSetColFunc': {'type': 'line', 'category': 'setter', 'operation': 'set_color'},
                'lineSetExtendFunc': {'type': 'line', 'category': 'setter', 'operation': 'set_extend'},
                'lineSetStyleFunc': {'type': 'line', 'category': 'setter', 'operation': 'set_style'},
                'lineSetWidthFunc': {'type': 'line', 'category': 'setter', 'operation': 'set_width'},
                'lineSetX1Func': {'type': 'line', 'category': 'setter', 'operation': 'set_x1'},
                'lineSetX2Func': {'type': 'line', 'category': 'setter', 'operation': 'set_x2'},
                'lineSetY1Func': {'type': 'line', 'category': 'setter', 'operation': 'set_y1'},
                'lineSetY2Func': {'type': 'line', 'category': 'setter', 'operation': 'set_y2'},

                                # String Operations
                'strContains': {'type': 'string', 'category': 'search', 'operation': 'contains'},
                'strEndsWith': {'type': 'string', 'category': 'search', 'operation': 'ends_with'},
                'strFormat': {'type': 'string', 'category': 'formatting', 'operation': 'format'},
                'strLength': {'type': 'string', 'category': 'property', 'operation': 'length'},
                'strLower': {'type': 'string', 'category': 'case', 'operation': 'lowercase'},
                'strMatch': {'type': 'string', 'category': 'search', 'operation': 'match'},
                'strPos': {'type': 'string', 'category': 'search', 'operation': 'position'},
                'strReplace': {'type': 'string', 'category': 'modification', 'operation': 'replace'},
                'strReplaceAll': {'type': 'string', 'category': 'modification', 'operation': 'replace_all'},
                'strSplit': {'type': 'string', 'category': 'modification', 'operation': 'split'},
                'strStartsWith': {'type': 'string', 'category': 'search', 'operation': 'starts_with'},
                'strSubstring': {'type': 'string', 'category': 'modification', 'operation': 'substring'},
                'strToNumber': {'type': 'string', 'category': 'conversion', 'operation': 'to_number'},
                'strToString': {'type': 'string', 'category': 'conversion', 'operation': 'to_string'},
                'strTrim': {'type': 'string', 'category': 'modification', 'operation': 'trim'},
                'strUpper': {'type': 'string', 'category': 'case', 'operation': 'uppercase'},

                # Chart Functions
                'chartPointCopy': {'type': 'chart', 'category': 'point', 'operation': 'copy'},
                'chartPointFromIndex': {'type': 'chart', 'category': 'point', 'operation': 'from_index'},
                'chartPointFromTime': {'type': 'chart', 'category': 'point', 'operation': 'from_time'},
                'chartPointNew': {'type': 'chart', 'category': 'point', 'operation': 'new'},
                'chartPointNow': {'type': 'chart', 'category': 'point', 'operation': 'now'},

                                # Timeframe Operations
                'timeframeIsDaily': {'type': 'timeframe', 'category': 'check', 'operation': 'is_daily'},
                'timeframeIsDWM': {'type': 'timeframe', 'category': 'check', 'operation': 'is_dwm'},
                'timeframeIsIntraday': {'type': 'timeframe', 'category': 'check', 'operation': 'is_intraday'},
                'timeframeIsMinutes': {'type': 'timeframe', 'category': 'check', 'operation': 'is_minutes'},
                'timeframeIsMonthly': {'type': 'timeframe', 'category': 'check', 'operation': 'is_monthly'},
                'timeframeIsSeconds': {'type': 'timeframe', 'category': 'check', 'operation': 'is_seconds'},
                'timeframeIsTicks': {'type': 'timeframe', 'category': 'check', 'operation': 'is_ticks'},
                'timeframeIsWeekly': {'type': 'timeframe', 'category': 'check', 'operation': 'is_weekly'},
                'timeframeMainPeriod': {'type': 'timeframe', 'category': 'property', 'operation': 'main_period'},
                'timeframeMultiplier': {'type': 'timeframe', 'category': 'property', 'operation': 'multiplier'},
                'timeframePeriod': {'type': 'timeframe', 'category': 'property', 'operation': 'period'},

                # Bar State Indicators
                'barIndex': {'type': 'bar', 'category': 'state', 'operation': 'index'},
                'barStateIsConfirmed': {'type': 'bar', 'category': 'state', 'operation': 'is_confirmed'},
                'barStateIsFirst': {'type': 'bar', 'category': 'state', 'operation': 'is_first'},
                'barStateIsHistory': {'type': 'bar', 'category': 'state', 'operation': 'is_history'},
                'barStateIsLast': {'type': 'bar', 'category': 'state', 'operation': 'is_last'},
                'barStateIsLastConfirmedHistory': {'type': 'bar', 'category': 'state', 'operation': 'is_last_confirmed_history'},
                'barStateIsNew': {'type': 'bar', 'category': 'state', 'operation': 'is_new'},
                'barStateIsRealtime': {'type': 'bar', 'category': 'state', 'operation': 'is_realtime'},

                                # Text Alignment
                'textAlignBottom': {'type': 'text', 'category': 'alignment', 'value': 'bottom'},
                'textAlignCenter': {'type': 'text', 'category': 'alignment', 'value': 'center'},
                'textAlignLeft': {'type': 'text', 'category': 'alignment', 'value': 'left'},
                'textAlignRight': {'type': 'text', 'category': 'alignment', 'value': 'right'},
                'textAlignTop': {'type': 'text', 'category': 'alignment', 'value': 'top'},
                'textWrapAuto': {'type': 'text', 'category': 'wrap', 'value': 'auto'},
                'textWrapNone': {'type': 'text', 'category': 'wrap', 'value': 'none'},

                # Location Types
                'xLocBarIndex': {'type': 'location', 'category': 'x_axis', 'value': 'bar_index'},
                'xLocBarTime': {'type': 'location', 'category': 'x_axis', 'value': 'bar_time'},
                'yLocAboveBar': {'type': 'location', 'category': 'y_axis', 'value': 'above_bar'},
                'yLocBelowBar': {'type': 'location', 'category': 'y_axis', 'value': 'below_bar'},
                'yLocPrice': {'type': 'location', 'category': 'y_axis', 'value': 'price'},

                # Data Types
                'Numeric': {'type': 'datatype', 'category': 'primitive', 'value': 'numeric'},
                'Boolean': {'type': 'datatype', 'category': 'primitive', 'value': 'boolean'},
                'String': {'type': 'datatype', 'category': 'primitive', 'value': 'string'},
                'Series': {'type': 'datatype', 'category': 'complex', 'value': 'series'}
            }
        }
    }
